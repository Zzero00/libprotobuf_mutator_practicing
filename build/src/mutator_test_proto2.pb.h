// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mutator_test_proto2.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mutator_5ftest_5fproto2_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mutator_5ftest_5fproto2_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mutator_5ftest_5fproto2_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mutator_5ftest_5fproto2_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mutator_5ftest_5fproto2_2eproto;
namespace protobuf_mutator {
class Msg;
struct MsgDefaultTypeInternal;
extern MsgDefaultTypeInternal _Msg_default_instance_;
class Msg_EmptyMessage;
struct Msg_EmptyMessageDefaultTypeInternal;
extern Msg_EmptyMessageDefaultTypeInternal _Msg_EmptyMessage_default_instance_;
class Msg_Group;
struct Msg_GroupDefaultTypeInternal;
extern Msg_GroupDefaultTypeInternal _Msg_Group_default_instance_;
class Msg_MapMessage;
struct Msg_MapMessageDefaultTypeInternal;
extern Msg_MapMessageDefaultTypeInternal _Msg_MapMessage_default_instance_;
class Msg_MapMessage_Map1Entry_DoNotUse;
struct Msg_MapMessage_Map1Entry_DoNotUseDefaultTypeInternal;
extern Msg_MapMessage_Map1Entry_DoNotUseDefaultTypeInternal _Msg_MapMessage_Map1Entry_DoNotUse_default_instance_;
class Msg_MapMessage_Map2Entry_DoNotUse;
struct Msg_MapMessage_Map2Entry_DoNotUseDefaultTypeInternal;
extern Msg_MapMessage_Map2Entry_DoNotUseDefaultTypeInternal _Msg_MapMessage_Map2Entry_DoNotUse_default_instance_;
class Msg_RegressionMessage;
struct Msg_RegressionMessageDefaultTypeInternal;
extern Msg_RegressionMessageDefaultTypeInternal _Msg_RegressionMessage_default_instance_;
class Msg_SmallMessage;
struct Msg_SmallMessageDefaultTypeInternal;
extern Msg_SmallMessageDefaultTypeInternal _Msg_SmallMessage_default_instance_;
class Msg_SubMsg;
struct Msg_SubMsgDefaultTypeInternal;
extern Msg_SubMsgDefaultTypeInternal _Msg_SubMsg_default_instance_;
}  // namespace protobuf_mutator
PROTOBUF_NAMESPACE_OPEN
template<> ::protobuf_mutator::Msg* Arena::CreateMaybeMessage<::protobuf_mutator::Msg>(Arena*);
template<> ::protobuf_mutator::Msg_EmptyMessage* Arena::CreateMaybeMessage<::protobuf_mutator::Msg_EmptyMessage>(Arena*);
template<> ::protobuf_mutator::Msg_Group* Arena::CreateMaybeMessage<::protobuf_mutator::Msg_Group>(Arena*);
template<> ::protobuf_mutator::Msg_MapMessage* Arena::CreateMaybeMessage<::protobuf_mutator::Msg_MapMessage>(Arena*);
template<> ::protobuf_mutator::Msg_MapMessage_Map1Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_mutator::Msg_MapMessage_Map1Entry_DoNotUse>(Arena*);
template<> ::protobuf_mutator::Msg_MapMessage_Map2Entry_DoNotUse* Arena::CreateMaybeMessage<::protobuf_mutator::Msg_MapMessage_Map2Entry_DoNotUse>(Arena*);
template<> ::protobuf_mutator::Msg_RegressionMessage* Arena::CreateMaybeMessage<::protobuf_mutator::Msg_RegressionMessage>(Arena*);
template<> ::protobuf_mutator::Msg_SmallMessage* Arena::CreateMaybeMessage<::protobuf_mutator::Msg_SmallMessage>(Arena*);
template<> ::protobuf_mutator::Msg_SubMsg* Arena::CreateMaybeMessage<::protobuf_mutator::Msg_SubMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf_mutator {

enum Msg_RegressionMessage_SingleValueEnum : int {
  Msg_RegressionMessage_SingleValueEnum_ENUM_0 = 0
};
bool Msg_RegressionMessage_SingleValueEnum_IsValid(int value);
constexpr Msg_RegressionMessage_SingleValueEnum Msg_RegressionMessage_SingleValueEnum_SingleValueEnum_MIN = Msg_RegressionMessage_SingleValueEnum_ENUM_0;
constexpr Msg_RegressionMessage_SingleValueEnum Msg_RegressionMessage_SingleValueEnum_SingleValueEnum_MAX = Msg_RegressionMessage_SingleValueEnum_ENUM_0;
constexpr int Msg_RegressionMessage_SingleValueEnum_SingleValueEnum_ARRAYSIZE = Msg_RegressionMessage_SingleValueEnum_SingleValueEnum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Msg_RegressionMessage_SingleValueEnum_descriptor();
template<typename T>
inline const std::string& Msg_RegressionMessage_SingleValueEnum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Msg_RegressionMessage_SingleValueEnum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Msg_RegressionMessage_SingleValueEnum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Msg_RegressionMessage_SingleValueEnum_descriptor(), enum_t_value);
}
inline bool Msg_RegressionMessage_SingleValueEnum_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Msg_RegressionMessage_SingleValueEnum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Msg_RegressionMessage_SingleValueEnum>(
    Msg_RegressionMessage_SingleValueEnum_descriptor(), name, value);
}
enum Msg_SmallMessage_Enum : int {
  Msg_SmallMessage_Enum_ENUM_0 = 0,
  Msg_SmallMessage_Enum_ENUM_1 = 1,
  Msg_SmallMessage_Enum_ENUM_2 = 2,
  Msg_SmallMessage_Enum_ENUM_3 = 3
};
bool Msg_SmallMessage_Enum_IsValid(int value);
constexpr Msg_SmallMessage_Enum Msg_SmallMessage_Enum_Enum_MIN = Msg_SmallMessage_Enum_ENUM_0;
constexpr Msg_SmallMessage_Enum Msg_SmallMessage_Enum_Enum_MAX = Msg_SmallMessage_Enum_ENUM_3;
constexpr int Msg_SmallMessage_Enum_Enum_ARRAYSIZE = Msg_SmallMessage_Enum_Enum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Msg_SmallMessage_Enum_descriptor();
template<typename T>
inline const std::string& Msg_SmallMessage_Enum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Msg_SmallMessage_Enum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Msg_SmallMessage_Enum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Msg_SmallMessage_Enum_descriptor(), enum_t_value);
}
inline bool Msg_SmallMessage_Enum_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Msg_SmallMessage_Enum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Msg_SmallMessage_Enum>(
    Msg_SmallMessage_Enum_descriptor(), name, value);
}
enum Msg_Enum : int {
  Msg_Enum_ENUM_0 = 0,
  Msg_Enum_ENUM_1 = 1,
  Msg_Enum_ENUM_2 = 2,
  Msg_Enum_ENUM_3 = 3,
  Msg_Enum_ENUM_4 = 4,
  Msg_Enum_ENUM_5 = 5,
  Msg_Enum_ENUM_6 = 6,
  Msg_Enum_ENUM_7 = 7,
  Msg_Enum_ENUM_8 = 8,
  Msg_Enum_ENUM_9 = 9
};
bool Msg_Enum_IsValid(int value);
constexpr Msg_Enum Msg_Enum_Enum_MIN = Msg_Enum_ENUM_0;
constexpr Msg_Enum Msg_Enum_Enum_MAX = Msg_Enum_ENUM_9;
constexpr int Msg_Enum_Enum_ARRAYSIZE = Msg_Enum_Enum_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Msg_Enum_descriptor();
template<typename T>
inline const std::string& Msg_Enum_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Msg_Enum>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Msg_Enum_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Msg_Enum_descriptor(), enum_t_value);
}
inline bool Msg_Enum_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Msg_Enum* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Msg_Enum>(
    Msg_Enum_descriptor(), name, value);
}
// ===================================================================

class Msg_SubMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_mutator.Msg.SubMsg) */ {
 public:
  inline Msg_SubMsg() : Msg_SubMsg(nullptr) {}
  ~Msg_SubMsg() override;
  explicit constexpr Msg_SubMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_SubMsg(const Msg_SubMsg& from);
  Msg_SubMsg(Msg_SubMsg&& from) noexcept
    : Msg_SubMsg() {
    *this = ::std::move(from);
  }

  inline Msg_SubMsg& operator=(const Msg_SubMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_SubMsg& operator=(Msg_SubMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_SubMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_SubMsg* internal_default_instance() {
    return reinterpret_cast<const Msg_SubMsg*>(
               &_Msg_SubMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Msg_SubMsg& a, Msg_SubMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_SubMsg* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_SubMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_SubMsg* New() const final {
    return new Msg_SubMsg();
  }

  Msg_SubMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_SubMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_SubMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_SubMsg& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_SubMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_mutator.Msg.SubMsg";
  }
  protected:
  explicit Msg_SubMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionalInt64FieldNumber = 1,
  };
  // optional int64 optional_int64 = 1;
  bool has_optional_int64() const;
  private:
  bool _internal_has_optional_int64() const;
  public:
  void clear_optional_int64();
  ::PROTOBUF_NAMESPACE_ID::int64 optional_int64() const;
  void set_optional_int64(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_optional_int64() const;
  void _internal_set_optional_int64(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_mutator.Msg.SubMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 optional_int64_;
  friend struct ::TableStruct_mutator_5ftest_5fproto2_2eproto;
};
// -------------------------------------------------------------------

class Msg_Group final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_mutator.Msg.Group) */ {
 public:
  inline Msg_Group() : Msg_Group(nullptr) {}
  ~Msg_Group() override;
  explicit constexpr Msg_Group(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_Group(const Msg_Group& from);
  Msg_Group(Msg_Group&& from) noexcept
    : Msg_Group() {
    *this = ::std::move(from);
  }

  inline Msg_Group& operator=(const Msg_Group& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_Group& operator=(Msg_Group&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_Group& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_Group* internal_default_instance() {
    return reinterpret_cast<const Msg_Group*>(
               &_Msg_Group_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Msg_Group& a, Msg_Group& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_Group* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_Group* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_Group* New() const final {
    return new Msg_Group();
  }

  Msg_Group* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_Group>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_Group& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_Group& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_Group* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_mutator.Msg.Group";
  }
  protected:
  explicit Msg_Group(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRepeatedBoolFieldNumber = 3,
    kRequiredBoolFieldNumber = 1,
    kOptionalBoolFieldNumber = 2,
  };
  // repeated bool repeated_bool = 3;
  int repeated_bool_size() const;
  private:
  int _internal_repeated_bool_size() const;
  public:
  void clear_repeated_bool();
  private:
  bool _internal_repeated_bool(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_repeated_bool() const;
  void _internal_add_repeated_bool(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_repeated_bool();
  public:
  bool repeated_bool(int index) const;
  void set_repeated_bool(int index, bool value);
  void add_repeated_bool(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      repeated_bool() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_repeated_bool();

  // required bool required_bool = 1;
  bool has_required_bool() const;
  private:
  bool _internal_has_required_bool() const;
  public:
  void clear_required_bool();
  bool required_bool() const;
  void set_required_bool(bool value);
  private:
  bool _internal_required_bool() const;
  void _internal_set_required_bool(bool value);
  public:

  // optional bool optional_bool = 2;
  bool has_optional_bool() const;
  private:
  bool _internal_has_optional_bool() const;
  public:
  void clear_optional_bool();
  bool optional_bool() const;
  void set_optional_bool(bool value);
  private:
  bool _internal_optional_bool() const;
  void _internal_set_optional_bool(bool value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_mutator.Msg.Group)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > repeated_bool_;
  bool required_bool_;
  bool optional_bool_;
  friend struct ::TableStruct_mutator_5ftest_5fproto2_2eproto;
};
// -------------------------------------------------------------------

class Msg_EmptyMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_mutator.Msg.EmptyMessage) */ {
 public:
  inline Msg_EmptyMessage() : Msg_EmptyMessage(nullptr) {}
  ~Msg_EmptyMessage() override;
  explicit constexpr Msg_EmptyMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_EmptyMessage(const Msg_EmptyMessage& from);
  Msg_EmptyMessage(Msg_EmptyMessage&& from) noexcept
    : Msg_EmptyMessage() {
    *this = ::std::move(from);
  }

  inline Msg_EmptyMessage& operator=(const Msg_EmptyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_EmptyMessage& operator=(Msg_EmptyMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_EmptyMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_EmptyMessage* internal_default_instance() {
    return reinterpret_cast<const Msg_EmptyMessage*>(
               &_Msg_EmptyMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Msg_EmptyMessage& a, Msg_EmptyMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_EmptyMessage* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_EmptyMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_EmptyMessage* New() const final {
    return new Msg_EmptyMessage();
  }

  Msg_EmptyMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_EmptyMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_EmptyMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_EmptyMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_EmptyMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_mutator.Msg.EmptyMessage";
  }
  protected:
  explicit Msg_EmptyMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:protobuf_mutator.Msg.EmptyMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mutator_5ftest_5fproto2_2eproto;
};
// -------------------------------------------------------------------

class Msg_RegressionMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_mutator.Msg.RegressionMessage) */ {
 public:
  inline Msg_RegressionMessage() : Msg_RegressionMessage(nullptr) {}
  ~Msg_RegressionMessage() override;
  explicit constexpr Msg_RegressionMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_RegressionMessage(const Msg_RegressionMessage& from);
  Msg_RegressionMessage(Msg_RegressionMessage&& from) noexcept
    : Msg_RegressionMessage() {
    *this = ::std::move(from);
  }

  inline Msg_RegressionMessage& operator=(const Msg_RegressionMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_RegressionMessage& operator=(Msg_RegressionMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_RegressionMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_RegressionMessage* internal_default_instance() {
    return reinterpret_cast<const Msg_RegressionMessage*>(
               &_Msg_RegressionMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Msg_RegressionMessage& a, Msg_RegressionMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_RegressionMessage* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_RegressionMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_RegressionMessage* New() const final {
    return new Msg_RegressionMessage();
  }

  Msg_RegressionMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_RegressionMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_RegressionMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_RegressionMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_RegressionMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_mutator.Msg.RegressionMessage";
  }
  protected:
  explicit Msg_RegressionMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Msg_RegressionMessage_SingleValueEnum SingleValueEnum;
  static constexpr SingleValueEnum ENUM_0 =
    Msg_RegressionMessage_SingleValueEnum_ENUM_0;
  static inline bool SingleValueEnum_IsValid(int value) {
    return Msg_RegressionMessage_SingleValueEnum_IsValid(value);
  }
  static constexpr SingleValueEnum SingleValueEnum_MIN =
    Msg_RegressionMessage_SingleValueEnum_SingleValueEnum_MIN;
  static constexpr SingleValueEnum SingleValueEnum_MAX =
    Msg_RegressionMessage_SingleValueEnum_SingleValueEnum_MAX;
  static constexpr int SingleValueEnum_ARRAYSIZE =
    Msg_RegressionMessage_SingleValueEnum_SingleValueEnum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  SingleValueEnum_descriptor() {
    return Msg_RegressionMessage_SingleValueEnum_descriptor();
  }
  template<typename T>
  static inline const std::string& SingleValueEnum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, SingleValueEnum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function SingleValueEnum_Name.");
    return Msg_RegressionMessage_SingleValueEnum_Name(enum_t_value);
  }
  static inline bool SingleValueEnum_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      SingleValueEnum* value) {
    return Msg_RegressionMessage_SingleValueEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEnumFieldNumber = 2,
  };
  // optional .protobuf_mutator.Msg.RegressionMessage.SingleValueEnum enum = 2;
  bool has_enum_() const;
  private:
  bool _internal_has_enum_() const;
  public:
  void clear_enum_();
  ::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum enum_() const;
  void set_enum_(::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum value);
  private:
  ::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum _internal_enum_() const;
  void _internal_set_enum_(::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_mutator.Msg.RegressionMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int enum__;
  friend struct ::TableStruct_mutator_5ftest_5fproto2_2eproto;
};
// -------------------------------------------------------------------

class Msg_SmallMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_mutator.Msg.SmallMessage) */ {
 public:
  inline Msg_SmallMessage() : Msg_SmallMessage(nullptr) {}
  ~Msg_SmallMessage() override;
  explicit constexpr Msg_SmallMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_SmallMessage(const Msg_SmallMessage& from);
  Msg_SmallMessage(Msg_SmallMessage&& from) noexcept
    : Msg_SmallMessage() {
    *this = ::std::move(from);
  }

  inline Msg_SmallMessage& operator=(const Msg_SmallMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_SmallMessage& operator=(Msg_SmallMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_SmallMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_SmallMessage* internal_default_instance() {
    return reinterpret_cast<const Msg_SmallMessage*>(
               &_Msg_SmallMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Msg_SmallMessage& a, Msg_SmallMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_SmallMessage* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_SmallMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_SmallMessage* New() const final {
    return new Msg_SmallMessage();
  }

  Msg_SmallMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_SmallMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_SmallMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_SmallMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_SmallMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_mutator.Msg.SmallMessage";
  }
  protected:
  explicit Msg_SmallMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Msg_SmallMessage_Enum Enum;
  static constexpr Enum ENUM_0 =
    Msg_SmallMessage_Enum_ENUM_0;
  static constexpr Enum ENUM_1 =
    Msg_SmallMessage_Enum_ENUM_1;
  static constexpr Enum ENUM_2 =
    Msg_SmallMessage_Enum_ENUM_2;
  static constexpr Enum ENUM_3 =
    Msg_SmallMessage_Enum_ENUM_3;
  static inline bool Enum_IsValid(int value) {
    return Msg_SmallMessage_Enum_IsValid(value);
  }
  static constexpr Enum Enum_MIN =
    Msg_SmallMessage_Enum_Enum_MIN;
  static constexpr Enum Enum_MAX =
    Msg_SmallMessage_Enum_Enum_MAX;
  static constexpr int Enum_ARRAYSIZE =
    Msg_SmallMessage_Enum_Enum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Enum_descriptor() {
    return Msg_SmallMessage_Enum_descriptor();
  }
  template<typename T>
  static inline const std::string& Enum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Enum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Enum_Name.");
    return Msg_SmallMessage_Enum_Name(enum_t_value);
  }
  static inline bool Enum_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Enum* value) {
    return Msg_SmallMessage_Enum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kOptBoolFieldNumber = 1,
    kOptEnumFieldNumber = 2,
  };
  // optional bool opt_bool = 1;
  bool has_opt_bool() const;
  private:
  bool _internal_has_opt_bool() const;
  public:
  void clear_opt_bool();
  bool opt_bool() const;
  void set_opt_bool(bool value);
  private:
  bool _internal_opt_bool() const;
  void _internal_set_opt_bool(bool value);
  public:

  // optional .protobuf_mutator.Msg.SmallMessage.Enum opt_enum = 2;
  bool has_opt_enum() const;
  private:
  bool _internal_has_opt_enum() const;
  public:
  void clear_opt_enum();
  ::protobuf_mutator::Msg_SmallMessage_Enum opt_enum() const;
  void set_opt_enum(::protobuf_mutator::Msg_SmallMessage_Enum value);
  private:
  ::protobuf_mutator::Msg_SmallMessage_Enum _internal_opt_enum() const;
  void _internal_set_opt_enum(::protobuf_mutator::Msg_SmallMessage_Enum value);
  public:

  // @@protoc_insertion_point(class_scope:protobuf_mutator.Msg.SmallMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool opt_bool_;
  int opt_enum_;
  friend struct ::TableStruct_mutator_5ftest_5fproto2_2eproto;
};
// -------------------------------------------------------------------

class Msg_MapMessage_Map1Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Msg_MapMessage_Map1Entry_DoNotUse, 
    std::string, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Msg_MapMessage_Map1Entry_DoNotUse, 
    std::string, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> SuperType;
  Msg_MapMessage_Map1Entry_DoNotUse();
  explicit constexpr Msg_MapMessage_Map1Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit Msg_MapMessage_Map1Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Msg_MapMessage_Map1Entry_DoNotUse& other);
  static const Msg_MapMessage_Map1Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Msg_MapMessage_Map1Entry_DoNotUse*>(&_Msg_MapMessage_Map1Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
#ifndef NDEBUG
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
       s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "protobuf_mutator.Msg.MapMessage.Map1Entry.key");
#else
    (void) s;
#endif
    return true;
 }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class Msg_MapMessage_Map2Entry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Msg_MapMessage_Map2Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_mutator::Msg,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<Msg_MapMessage_Map2Entry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_mutator::Msg,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> SuperType;
  Msg_MapMessage_Map2Entry_DoNotUse();
  explicit constexpr Msg_MapMessage_Map2Entry_DoNotUse(
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);
  explicit Msg_MapMessage_Map2Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const Msg_MapMessage_Map2Entry_DoNotUse& other);
  static const Msg_MapMessage_Map2Entry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Msg_MapMessage_Map2Entry_DoNotUse*>(&_Msg_MapMessage_Map2Entry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
};

// -------------------------------------------------------------------

class Msg_MapMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_mutator.Msg.MapMessage) */ {
 public:
  inline Msg_MapMessage() : Msg_MapMessage(nullptr) {}
  ~Msg_MapMessage() override;
  explicit constexpr Msg_MapMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg_MapMessage(const Msg_MapMessage& from);
  Msg_MapMessage(Msg_MapMessage&& from) noexcept
    : Msg_MapMessage() {
    *this = ::std::move(from);
  }

  inline Msg_MapMessage& operator=(const Msg_MapMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg_MapMessage& operator=(Msg_MapMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg_MapMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg_MapMessage* internal_default_instance() {
    return reinterpret_cast<const Msg_MapMessage*>(
               &_Msg_MapMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Msg_MapMessage& a, Msg_MapMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg_MapMessage* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg_MapMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg_MapMessage* New() const final {
    return new Msg_MapMessage();
  }

  Msg_MapMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg_MapMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg_MapMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg_MapMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg_MapMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_mutator.Msg.MapMessage";
  }
  protected:
  explicit Msg_MapMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kMap1FieldNumber = 1,
    kMap2FieldNumber = 2,
  };
  // map<string, int32> map1 = 1;
  int map1_size() const;
  private:
  int _internal_map1_size() const;
  public:
  void clear_map1();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_map1() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_map1();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >&
      map1() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_map1();

  // map<int32, .protobuf_mutator.Msg> map2 = 2;
  int map2_size() const;
  private:
  int _internal_map2_size() const;
  public:
  void clear_map2();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_mutator::Msg >&
      _internal_map2() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_mutator::Msg >*
      _internal_mutable_map2();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_mutator::Msg >&
      map2() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_mutator::Msg >*
      mutable_map2();

  // @@protoc_insertion_point(class_scope:protobuf_mutator.Msg.MapMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Msg_MapMessage_Map1Entry_DoNotUse,
      std::string, ::PROTOBUF_NAMESPACE_ID::int32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32> map1_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      Msg_MapMessage_Map2Entry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_mutator::Msg,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE> map2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mutator_5ftest_5fproto2_2eproto;
};
// -------------------------------------------------------------------

class Msg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf_mutator.Msg) */ {
 public:
  inline Msg() : Msg(nullptr) {}
  ~Msg() override;
  explicit constexpr Msg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Msg(const Msg& from);
  Msg(Msg&& from) noexcept
    : Msg() {
    *this = ::std::move(from);
  }

  inline Msg& operator=(const Msg& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg& operator=(Msg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg& default_instance() {
    return *internal_default_instance();
  }
  enum OneOfCase {
    kOneofDouble = 52,
    kOneofFloat = 53,
    kOneofInt32 = 54,
    kOneofInt64 = 55,
    kOneofUint32 = 56,
    kOneofUint64 = 57,
    kOneofSint32 = 58,
    kOneofSint64 = 59,
    kOneofFixed32 = 60,
    kOneofFixed64 = 61,
    kOneofSfixed32 = 62,
    kOneofSfixed64 = 63,
    kOneofBool = 64,
    kOneofString = 65,
    kOneofBytes = 66,
    kOneofEnum = 67,
    kOneofMsg = 68,
    ONEOF_NOT_SET = 0,
  };

  static inline const Msg* internal_default_instance() {
    return reinterpret_cast<const Msg*>(
               &_Msg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Msg& a, Msg& b) {
    a.Swap(&b);
  }
  inline void Swap(Msg* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Msg* New() const final {
    return new Msg();
  }

  Msg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Msg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Msg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Msg& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Msg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "protobuf_mutator.Msg";
  }
  protected:
  explicit Msg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Msg_SubMsg SubMsg;
  typedef Msg_Group Group;
  typedef Msg_EmptyMessage EmptyMessage;
  typedef Msg_RegressionMessage RegressionMessage;
  typedef Msg_SmallMessage SmallMessage;
  typedef Msg_MapMessage MapMessage;

  typedef Msg_Enum Enum;
  static constexpr Enum ENUM_0 =
    Msg_Enum_ENUM_0;
  static constexpr Enum ENUM_1 =
    Msg_Enum_ENUM_1;
  static constexpr Enum ENUM_2 =
    Msg_Enum_ENUM_2;
  static constexpr Enum ENUM_3 =
    Msg_Enum_ENUM_3;
  static constexpr Enum ENUM_4 =
    Msg_Enum_ENUM_4;
  static constexpr Enum ENUM_5 =
    Msg_Enum_ENUM_5;
  static constexpr Enum ENUM_6 =
    Msg_Enum_ENUM_6;
  static constexpr Enum ENUM_7 =
    Msg_Enum_ENUM_7;
  static constexpr Enum ENUM_8 =
    Msg_Enum_ENUM_8;
  static constexpr Enum ENUM_9 =
    Msg_Enum_ENUM_9;
  static inline bool Enum_IsValid(int value) {
    return Msg_Enum_IsValid(value);
  }
  static constexpr Enum Enum_MIN =
    Msg_Enum_Enum_MIN;
  static constexpr Enum Enum_MAX =
    Msg_Enum_Enum_MAX;
  static constexpr int Enum_ARRAYSIZE =
    Msg_Enum_Enum_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Enum_descriptor() {
    return Msg_Enum_descriptor();
  }
  template<typename T>
  static inline const std::string& Enum_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Enum>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Enum_Name.");
    return Msg_Enum_Name(enum_t_value);
  }
  static inline bool Enum_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Enum* value) {
    return Msg_Enum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kRepeatedDoubleFieldNumber = 35,
    kRepeatedFloatFieldNumber = 36,
    kRepeatedInt32FieldNumber = 37,
    kRepeatedInt64FieldNumber = 38,
    kRepeatedUint32FieldNumber = 39,
    kRepeatedUint64FieldNumber = 40,
    kRepeatedSint32FieldNumber = 41,
    kRepeatedSint64FieldNumber = 42,
    kRepeatedFixed32FieldNumber = 43,
    kRepeatedFixed64FieldNumber = 44,
    kRepeatedSfixed32FieldNumber = 45,
    kRepeatedSfixed64FieldNumber = 46,
    kRepeatedBoolFieldNumber = 47,
    kRepeatedStringFieldNumber = 48,
    kRepeatedBytesFieldNumber = 49,
    kRepeatedEnumFieldNumber = 50,
    kRepeatedMsgFieldNumber = 51,
    kRequiredStringFieldNumber = 14,
    kRequiredBytesFieldNumber = 15,
    kOptionalStringFieldNumber = 31,
    kOptionalBytesFieldNumber = 32,
    kRequiredMsgFieldNumber = 17,
    kOptionalMsgFieldNumber = 34,
    kSubMessageFieldNumber = 69,
    kGroupFieldNumber = 70,
    kAnyFieldNumber = 90,
    kRequiredDoubleFieldNumber = 1,
    kRequiredFloatFieldNumber = 2,
    kRequiredInt32FieldNumber = 3,
    kRequiredInt64FieldNumber = 4,
    kRequiredUint64FieldNumber = 6,
    kRequiredUint32FieldNumber = 5,
    kRequiredSint32FieldNumber = 7,
    kRequiredSint64FieldNumber = 8,
    kRequiredFixed64FieldNumber = 10,
    kRequiredFixed32FieldNumber = 9,
    kRequiredSfixed32FieldNumber = 11,
    kRequiredSfixed64FieldNumber = 12,
    kRequiredEnumFieldNumber = 16,
    kOptionalFloatFieldNumber = 19,
    kOptionalDoubleFieldNumber = 18,
    kOptionalInt64FieldNumber = 21,
    kOptionalInt32FieldNumber = 20,
    kRequiredBoolFieldNumber = 13,
    kOptionalBoolFieldNumber = 30,
    kOptionalUint64FieldNumber = 23,
    kOptionalUint32FieldNumber = 22,
    kOptionalSint32FieldNumber = 24,
    kOptionalSint64FieldNumber = 25,
    kOptionalFixed64FieldNumber = 27,
    kOptionalFixed32FieldNumber = 26,
    kOptionalSfixed32FieldNumber = 28,
    kOptionalSfixed64FieldNumber = 29,
    kOptionalEnumFieldNumber = 33,
    kOneofDoubleFieldNumber = 52,
    kOneofFloatFieldNumber = 53,
    kOneofInt32FieldNumber = 54,
    kOneofInt64FieldNumber = 55,
    kOneofUint32FieldNumber = 56,
    kOneofUint64FieldNumber = 57,
    kOneofSint32FieldNumber = 58,
    kOneofSint64FieldNumber = 59,
    kOneofFixed32FieldNumber = 60,
    kOneofFixed64FieldNumber = 61,
    kOneofSfixed32FieldNumber = 62,
    kOneofSfixed64FieldNumber = 63,
    kOneofBoolFieldNumber = 64,
    kOneofStringFieldNumber = 65,
    kOneofBytesFieldNumber = 66,
    kOneofEnumFieldNumber = 67,
    kOneofMsgFieldNumber = 68,
  };
  // repeated double repeated_double = 35;
  int repeated_double_size() const;
  private:
  int _internal_repeated_double_size() const;
  public:
  void clear_repeated_double();
  private:
  double _internal_repeated_double(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_repeated_double() const;
  void _internal_add_repeated_double(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_repeated_double();
  public:
  double repeated_double(int index) const;
  void set_repeated_double(int index, double value);
  void add_repeated_double(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      repeated_double() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_repeated_double();

  // repeated float repeated_float = 36;
  int repeated_float_size() const;
  private:
  int _internal_repeated_float_size() const;
  public:
  void clear_repeated_float();
  private:
  float _internal_repeated_float(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_repeated_float() const;
  void _internal_add_repeated_float(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_repeated_float();
  public:
  float repeated_float(int index) const;
  void set_repeated_float(int index, float value);
  void add_repeated_float(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      repeated_float() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_repeated_float();

  // repeated int32 repeated_int32 = 37;
  int repeated_int32_size() const;
  private:
  int _internal_repeated_int32_size() const;
  public:
  void clear_repeated_int32();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_repeated_int32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_repeated_int32() const;
  void _internal_add_repeated_int32(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_repeated_int32();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 repeated_int32(int index) const;
  void set_repeated_int32(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_repeated_int32(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      repeated_int32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_repeated_int32();

  // repeated int64 repeated_int64 = 38;
  int repeated_int64_size() const;
  private:
  int _internal_repeated_int64_size() const;
  public:
  void clear_repeated_int64();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_repeated_int64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_repeated_int64() const;
  void _internal_add_repeated_int64(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_repeated_int64();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 repeated_int64(int index) const;
  void set_repeated_int64(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_repeated_int64(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      repeated_int64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_repeated_int64();

  // repeated uint32 repeated_uint32 = 39;
  int repeated_uint32_size() const;
  private:
  int _internal_repeated_uint32_size() const;
  public:
  void clear_repeated_uint32();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_repeated_uint32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_repeated_uint32() const;
  void _internal_add_repeated_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_repeated_uint32();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 repeated_uint32(int index) const;
  void set_repeated_uint32(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_repeated_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      repeated_uint32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_repeated_uint32();

  // repeated uint64 repeated_uint64 = 40;
  int repeated_uint64_size() const;
  private:
  int _internal_repeated_uint64_size() const;
  public:
  void clear_repeated_uint64();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_repeated_uint64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_repeated_uint64() const;
  void _internal_add_repeated_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_repeated_uint64();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 repeated_uint64(int index) const;
  void set_repeated_uint64(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_repeated_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      repeated_uint64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_repeated_uint64();

  // repeated sint32 repeated_sint32 = 41;
  int repeated_sint32_size() const;
  private:
  int _internal_repeated_sint32_size() const;
  public:
  void clear_repeated_sint32();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_repeated_sint32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_repeated_sint32() const;
  void _internal_add_repeated_sint32(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_repeated_sint32();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 repeated_sint32(int index) const;
  void set_repeated_sint32(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_repeated_sint32(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      repeated_sint32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_repeated_sint32();

  // repeated sint64 repeated_sint64 = 42;
  int repeated_sint64_size() const;
  private:
  int _internal_repeated_sint64_size() const;
  public:
  void clear_repeated_sint64();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_repeated_sint64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_repeated_sint64() const;
  void _internal_add_repeated_sint64(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_repeated_sint64();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 repeated_sint64(int index) const;
  void set_repeated_sint64(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_repeated_sint64(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      repeated_sint64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_repeated_sint64();

  // repeated fixed32 repeated_fixed32 = 43;
  int repeated_fixed32_size() const;
  private:
  int _internal_repeated_fixed32_size() const;
  public:
  void clear_repeated_fixed32();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_repeated_fixed32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_repeated_fixed32() const;
  void _internal_add_repeated_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_repeated_fixed32();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 repeated_fixed32(int index) const;
  void set_repeated_fixed32(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_repeated_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      repeated_fixed32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_repeated_fixed32();

  // repeated fixed64 repeated_fixed64 = 44;
  int repeated_fixed64_size() const;
  private:
  int _internal_repeated_fixed64_size() const;
  public:
  void clear_repeated_fixed64();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_repeated_fixed64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_repeated_fixed64() const;
  void _internal_add_repeated_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_repeated_fixed64();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 repeated_fixed64(int index) const;
  void set_repeated_fixed64(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_repeated_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      repeated_fixed64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_repeated_fixed64();

  // repeated sfixed32 repeated_sfixed32 = 45;
  int repeated_sfixed32_size() const;
  private:
  int _internal_repeated_sfixed32_size() const;
  public:
  void clear_repeated_sfixed32();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_repeated_sfixed32(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_repeated_sfixed32() const;
  void _internal_add_repeated_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_repeated_sfixed32();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 repeated_sfixed32(int index) const;
  void set_repeated_sfixed32(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_repeated_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      repeated_sfixed32() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_repeated_sfixed32();

  // repeated sfixed64 repeated_sfixed64 = 46;
  int repeated_sfixed64_size() const;
  private:
  int _internal_repeated_sfixed64_size() const;
  public:
  void clear_repeated_sfixed64();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_repeated_sfixed64(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_repeated_sfixed64() const;
  void _internal_add_repeated_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_repeated_sfixed64();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 repeated_sfixed64(int index) const;
  void set_repeated_sfixed64(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_repeated_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      repeated_sfixed64() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_repeated_sfixed64();

  // repeated bool repeated_bool = 47;
  int repeated_bool_size() const;
  private:
  int _internal_repeated_bool_size() const;
  public:
  void clear_repeated_bool();
  private:
  bool _internal_repeated_bool(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_repeated_bool() const;
  void _internal_add_repeated_bool(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_repeated_bool();
  public:
  bool repeated_bool(int index) const;
  void set_repeated_bool(int index, bool value);
  void add_repeated_bool(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      repeated_bool() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_repeated_bool();

  // repeated string repeated_string = 48;
  int repeated_string_size() const;
  private:
  int _internal_repeated_string_size() const;
  public:
  void clear_repeated_string();
  const std::string& repeated_string(int index) const;
  std::string* mutable_repeated_string(int index);
  void set_repeated_string(int index, const std::string& value);
  void set_repeated_string(int index, std::string&& value);
  void set_repeated_string(int index, const char* value);
  void set_repeated_string(int index, const char* value, size_t size);
  std::string* add_repeated_string();
  void add_repeated_string(const std::string& value);
  void add_repeated_string(std::string&& value);
  void add_repeated_string(const char* value);
  void add_repeated_string(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& repeated_string() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_repeated_string();
  private:
  const std::string& _internal_repeated_string(int index) const;
  std::string* _internal_add_repeated_string();
  public:

  // repeated bytes repeated_bytes = 49;
  int repeated_bytes_size() const;
  private:
  int _internal_repeated_bytes_size() const;
  public:
  void clear_repeated_bytes();
  const std::string& repeated_bytes(int index) const;
  std::string* mutable_repeated_bytes(int index);
  void set_repeated_bytes(int index, const std::string& value);
  void set_repeated_bytes(int index, std::string&& value);
  void set_repeated_bytes(int index, const char* value);
  void set_repeated_bytes(int index, const void* value, size_t size);
  std::string* add_repeated_bytes();
  void add_repeated_bytes(const std::string& value);
  void add_repeated_bytes(std::string&& value);
  void add_repeated_bytes(const char* value);
  void add_repeated_bytes(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& repeated_bytes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_repeated_bytes();
  private:
  const std::string& _internal_repeated_bytes(int index) const;
  std::string* _internal_add_repeated_bytes();
  public:

  // repeated .protobuf_mutator.Msg.Enum repeated_enum = 50;
  int repeated_enum_size() const;
  private:
  int _internal_repeated_enum_size() const;
  public:
  void clear_repeated_enum();
  private:
  ::protobuf_mutator::Msg_Enum _internal_repeated_enum(int index) const;
  void _internal_add_repeated_enum(::protobuf_mutator::Msg_Enum value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_repeated_enum();
  public:
  ::protobuf_mutator::Msg_Enum repeated_enum(int index) const;
  void set_repeated_enum(int index, ::protobuf_mutator::Msg_Enum value);
  void add_repeated_enum(::protobuf_mutator::Msg_Enum value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& repeated_enum() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_repeated_enum();

  // repeated .protobuf_mutator.Msg repeated_msg = 51;
  int repeated_msg_size() const;
  private:
  int _internal_repeated_msg_size() const;
  public:
  void clear_repeated_msg();
  ::protobuf_mutator::Msg* mutable_repeated_msg(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_mutator::Msg >*
      mutable_repeated_msg();
  private:
  const ::protobuf_mutator::Msg& _internal_repeated_msg(int index) const;
  ::protobuf_mutator::Msg* _internal_add_repeated_msg();
  public:
  const ::protobuf_mutator::Msg& repeated_msg(int index) const;
  ::protobuf_mutator::Msg* add_repeated_msg();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_mutator::Msg >&
      repeated_msg() const;

  // required string required_string = 14;
  bool has_required_string() const;
  private:
  bool _internal_has_required_string() const;
  public:
  void clear_required_string();
  const std::string& required_string() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_required_string(ArgT0&& arg0, ArgT... args);
  std::string* mutable_required_string();
  PROTOBUF_MUST_USE_RESULT std::string* release_required_string();
  void set_allocated_required_string(std::string* required_string);
  private:
  const std::string& _internal_required_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_required_string(const std::string& value);
  std::string* _internal_mutable_required_string();
  public:

  // required bytes required_bytes = 15;
  bool has_required_bytes() const;
  private:
  bool _internal_has_required_bytes() const;
  public:
  void clear_required_bytes();
  const std::string& required_bytes() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_required_bytes(ArgT0&& arg0, ArgT... args);
  std::string* mutable_required_bytes();
  PROTOBUF_MUST_USE_RESULT std::string* release_required_bytes();
  void set_allocated_required_bytes(std::string* required_bytes);
  private:
  const std::string& _internal_required_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_required_bytes(const std::string& value);
  std::string* _internal_mutable_required_bytes();
  public:

  // optional string optional_string = 31;
  bool has_optional_string() const;
  private:
  bool _internal_has_optional_string() const;
  public:
  void clear_optional_string();
  const std::string& optional_string() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_optional_string(ArgT0&& arg0, ArgT... args);
  std::string* mutable_optional_string();
  PROTOBUF_MUST_USE_RESULT std::string* release_optional_string();
  void set_allocated_optional_string(std::string* optional_string);
  private:
  const std::string& _internal_optional_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_string(const std::string& value);
  std::string* _internal_mutable_optional_string();
  public:

  // optional bytes optional_bytes = 32;
  bool has_optional_bytes() const;
  private:
  bool _internal_has_optional_bytes() const;
  public:
  void clear_optional_bytes();
  const std::string& optional_bytes() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_optional_bytes(ArgT0&& arg0, ArgT... args);
  std::string* mutable_optional_bytes();
  PROTOBUF_MUST_USE_RESULT std::string* release_optional_bytes();
  void set_allocated_optional_bytes(std::string* optional_bytes);
  private:
  const std::string& _internal_optional_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_optional_bytes(const std::string& value);
  std::string* _internal_mutable_optional_bytes();
  public:

  // required .protobuf_mutator.Msg.SubMsg required_msg = 17;
  bool has_required_msg() const;
  private:
  bool _internal_has_required_msg() const;
  public:
  void clear_required_msg();
  const ::protobuf_mutator::Msg_SubMsg& required_msg() const;
  PROTOBUF_MUST_USE_RESULT ::protobuf_mutator::Msg_SubMsg* release_required_msg();
  ::protobuf_mutator::Msg_SubMsg* mutable_required_msg();
  void set_allocated_required_msg(::protobuf_mutator::Msg_SubMsg* required_msg);
  private:
  const ::protobuf_mutator::Msg_SubMsg& _internal_required_msg() const;
  ::protobuf_mutator::Msg_SubMsg* _internal_mutable_required_msg();
  public:
  void unsafe_arena_set_allocated_required_msg(
      ::protobuf_mutator::Msg_SubMsg* required_msg);
  ::protobuf_mutator::Msg_SubMsg* unsafe_arena_release_required_msg();

  // optional .protobuf_mutator.Msg optional_msg = 34;
  bool has_optional_msg() const;
  private:
  bool _internal_has_optional_msg() const;
  public:
  void clear_optional_msg();
  const ::protobuf_mutator::Msg& optional_msg() const;
  PROTOBUF_MUST_USE_RESULT ::protobuf_mutator::Msg* release_optional_msg();
  ::protobuf_mutator::Msg* mutable_optional_msg();
  void set_allocated_optional_msg(::protobuf_mutator::Msg* optional_msg);
  private:
  const ::protobuf_mutator::Msg& _internal_optional_msg() const;
  ::protobuf_mutator::Msg* _internal_mutable_optional_msg();
  public:
  void unsafe_arena_set_allocated_optional_msg(
      ::protobuf_mutator::Msg* optional_msg);
  ::protobuf_mutator::Msg* unsafe_arena_release_optional_msg();

  // optional .protobuf_mutator.Msg.SubMsg sub_message = 69;
  bool has_sub_message() const;
  private:
  bool _internal_has_sub_message() const;
  public:
  void clear_sub_message();
  const ::protobuf_mutator::Msg_SubMsg& sub_message() const;
  PROTOBUF_MUST_USE_RESULT ::protobuf_mutator::Msg_SubMsg* release_sub_message();
  ::protobuf_mutator::Msg_SubMsg* mutable_sub_message();
  void set_allocated_sub_message(::protobuf_mutator::Msg_SubMsg* sub_message);
  private:
  const ::protobuf_mutator::Msg_SubMsg& _internal_sub_message() const;
  ::protobuf_mutator::Msg_SubMsg* _internal_mutable_sub_message();
  public:
  void unsafe_arena_set_allocated_sub_message(
      ::protobuf_mutator::Msg_SubMsg* sub_message);
  ::protobuf_mutator::Msg_SubMsg* unsafe_arena_release_sub_message();

  // required group Group = 70 { ... };
  bool has_group() const;
  private:
  bool _internal_has_group() const;
  public:
  void clear_group();
  const ::protobuf_mutator::Msg_Group& group() const;
  PROTOBUF_MUST_USE_RESULT ::protobuf_mutator::Msg_Group* release_group();
  ::protobuf_mutator::Msg_Group* mutable_group();
  void set_allocated_group(::protobuf_mutator::Msg_Group* group);
  private:
  const ::protobuf_mutator::Msg_Group& _internal_group() const;
  ::protobuf_mutator::Msg_Group* _internal_mutable_group();
  public:
  void unsafe_arena_set_allocated_group(
      ::protobuf_mutator::Msg_Group* group);
  ::protobuf_mutator::Msg_Group* unsafe_arena_release_group();

  // optional .google.protobuf.Any any = 90;
  bool has_any() const;
  private:
  bool _internal_has_any() const;
  public:
  void clear_any();
  const PROTOBUF_NAMESPACE_ID::Any& any() const;
  PROTOBUF_MUST_USE_RESULT PROTOBUF_NAMESPACE_ID::Any* release_any();
  PROTOBUF_NAMESPACE_ID::Any* mutable_any();
  void set_allocated_any(PROTOBUF_NAMESPACE_ID::Any* any);
  private:
  const PROTOBUF_NAMESPACE_ID::Any& _internal_any() const;
  PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_any();
  public:
  void unsafe_arena_set_allocated_any(
      PROTOBUF_NAMESPACE_ID::Any* any);
  PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_any();

  // required double required_double = 1;
  bool has_required_double() const;
  private:
  bool _internal_has_required_double() const;
  public:
  void clear_required_double();
  double required_double() const;
  void set_required_double(double value);
  private:
  double _internal_required_double() const;
  void _internal_set_required_double(double value);
  public:

  // required float required_float = 2;
  bool has_required_float() const;
  private:
  bool _internal_has_required_float() const;
  public:
  void clear_required_float();
  float required_float() const;
  void set_required_float(float value);
  private:
  float _internal_required_float() const;
  void _internal_set_required_float(float value);
  public:

  // required int32 required_int32 = 3;
  bool has_required_int32() const;
  private:
  bool _internal_has_required_int32() const;
  public:
  void clear_required_int32();
  ::PROTOBUF_NAMESPACE_ID::int32 required_int32() const;
  void set_required_int32(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_required_int32() const;
  void _internal_set_required_int32(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int64 required_int64 = 4;
  bool has_required_int64() const;
  private:
  bool _internal_has_required_int64() const;
  public:
  void clear_required_int64();
  ::PROTOBUF_NAMESPACE_ID::int64 required_int64() const;
  void set_required_int64(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_required_int64() const;
  void _internal_set_required_int64(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required uint64 required_uint64 = 6;
  bool has_required_uint64() const;
  private:
  bool _internal_has_required_uint64() const;
  public:
  void clear_required_uint64();
  ::PROTOBUF_NAMESPACE_ID::uint64 required_uint64() const;
  void set_required_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_required_uint64() const;
  void _internal_set_required_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required uint32 required_uint32 = 5;
  bool has_required_uint32() const;
  private:
  bool _internal_has_required_uint32() const;
  public:
  void clear_required_uint32();
  ::PROTOBUF_NAMESPACE_ID::uint32 required_uint32() const;
  void set_required_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_required_uint32() const;
  void _internal_set_required_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required sint32 required_sint32 = 7;
  bool has_required_sint32() const;
  private:
  bool _internal_has_required_sint32() const;
  public:
  void clear_required_sint32();
  ::PROTOBUF_NAMESPACE_ID::int32 required_sint32() const;
  void set_required_sint32(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_required_sint32() const;
  void _internal_set_required_sint32(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required sint64 required_sint64 = 8;
  bool has_required_sint64() const;
  private:
  bool _internal_has_required_sint64() const;
  public:
  void clear_required_sint64();
  ::PROTOBUF_NAMESPACE_ID::int64 required_sint64() const;
  void set_required_sint64(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_required_sint64() const;
  void _internal_set_required_sint64(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required fixed64 required_fixed64 = 10;
  bool has_required_fixed64() const;
  private:
  bool _internal_has_required_fixed64() const;
  public:
  void clear_required_fixed64();
  ::PROTOBUF_NAMESPACE_ID::uint64 required_fixed64() const;
  void set_required_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_required_fixed64() const;
  void _internal_set_required_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required fixed32 required_fixed32 = 9;
  bool has_required_fixed32() const;
  private:
  bool _internal_has_required_fixed32() const;
  public:
  void clear_required_fixed32();
  ::PROTOBUF_NAMESPACE_ID::uint32 required_fixed32() const;
  void set_required_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_required_fixed32() const;
  void _internal_set_required_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required sfixed32 required_sfixed32 = 11;
  bool has_required_sfixed32() const;
  private:
  bool _internal_has_required_sfixed32() const;
  public:
  void clear_required_sfixed32();
  ::PROTOBUF_NAMESPACE_ID::int32 required_sfixed32() const;
  void set_required_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_required_sfixed32() const;
  void _internal_set_required_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required sfixed64 required_sfixed64 = 12;
  bool has_required_sfixed64() const;
  private:
  bool _internal_has_required_sfixed64() const;
  public:
  void clear_required_sfixed64();
  ::PROTOBUF_NAMESPACE_ID::int64 required_sfixed64() const;
  void set_required_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_required_sfixed64() const;
  void _internal_set_required_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required .protobuf_mutator.Msg.Enum required_enum = 16;
  bool has_required_enum() const;
  private:
  bool _internal_has_required_enum() const;
  public:
  void clear_required_enum();
  ::protobuf_mutator::Msg_Enum required_enum() const;
  void set_required_enum(::protobuf_mutator::Msg_Enum value);
  private:
  ::protobuf_mutator::Msg_Enum _internal_required_enum() const;
  void _internal_set_required_enum(::protobuf_mutator::Msg_Enum value);
  public:

  // optional float optional_float = 19;
  bool has_optional_float() const;
  private:
  bool _internal_has_optional_float() const;
  public:
  void clear_optional_float();
  float optional_float() const;
  void set_optional_float(float value);
  private:
  float _internal_optional_float() const;
  void _internal_set_optional_float(float value);
  public:

  // optional double optional_double = 18;
  bool has_optional_double() const;
  private:
  bool _internal_has_optional_double() const;
  public:
  void clear_optional_double();
  double optional_double() const;
  void set_optional_double(double value);
  private:
  double _internal_optional_double() const;
  void _internal_set_optional_double(double value);
  public:

  // optional int64 optional_int64 = 21;
  bool has_optional_int64() const;
  private:
  bool _internal_has_optional_int64() const;
  public:
  void clear_optional_int64();
  ::PROTOBUF_NAMESPACE_ID::int64 optional_int64() const;
  void set_optional_int64(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_optional_int64() const;
  void _internal_set_optional_int64(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int32 optional_int32 = 20;
  bool has_optional_int32() const;
  private:
  bool _internal_has_optional_int32() const;
  public:
  void clear_optional_int32();
  ::PROTOBUF_NAMESPACE_ID::int32 optional_int32() const;
  void set_optional_int32(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_optional_int32() const;
  void _internal_set_optional_int32(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required bool required_bool = 13;
  bool has_required_bool() const;
  private:
  bool _internal_has_required_bool() const;
  public:
  void clear_required_bool();
  bool required_bool() const;
  void set_required_bool(bool value);
  private:
  bool _internal_required_bool() const;
  void _internal_set_required_bool(bool value);
  public:

  // optional bool optional_bool = 30;
  bool has_optional_bool() const;
  private:
  bool _internal_has_optional_bool() const;
  public:
  void clear_optional_bool();
  bool optional_bool() const;
  void set_optional_bool(bool value);
  private:
  bool _internal_optional_bool() const;
  void _internal_set_optional_bool(bool value);
  public:

  // optional uint64 optional_uint64 = 23;
  bool has_optional_uint64() const;
  private:
  bool _internal_has_optional_uint64() const;
  public:
  void clear_optional_uint64();
  ::PROTOBUF_NAMESPACE_ID::uint64 optional_uint64() const;
  void set_optional_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_optional_uint64() const;
  void _internal_set_optional_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 optional_uint32 = 22;
  bool has_optional_uint32() const;
  private:
  bool _internal_has_optional_uint32() const;
  public:
  void clear_optional_uint32();
  ::PROTOBUF_NAMESPACE_ID::uint32 optional_uint32() const;
  void set_optional_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_optional_uint32() const;
  void _internal_set_optional_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional sint32 optional_sint32 = 24;
  bool has_optional_sint32() const;
  private:
  bool _internal_has_optional_sint32() const;
  public:
  void clear_optional_sint32();
  ::PROTOBUF_NAMESPACE_ID::int32 optional_sint32() const;
  void set_optional_sint32(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_optional_sint32() const;
  void _internal_set_optional_sint32(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional sint64 optional_sint64 = 25;
  bool has_optional_sint64() const;
  private:
  bool _internal_has_optional_sint64() const;
  public:
  void clear_optional_sint64();
  ::PROTOBUF_NAMESPACE_ID::int64 optional_sint64() const;
  void set_optional_sint64(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_optional_sint64() const;
  void _internal_set_optional_sint64(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional fixed64 optional_fixed64 = 27;
  bool has_optional_fixed64() const;
  private:
  bool _internal_has_optional_fixed64() const;
  public:
  void clear_optional_fixed64();
  ::PROTOBUF_NAMESPACE_ID::uint64 optional_fixed64() const;
  void set_optional_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_optional_fixed64() const;
  void _internal_set_optional_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed32 optional_fixed32 = 26;
  bool has_optional_fixed32() const;
  private:
  bool _internal_has_optional_fixed32() const;
  public:
  void clear_optional_fixed32();
  ::PROTOBUF_NAMESPACE_ID::uint32 optional_fixed32() const;
  void set_optional_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_optional_fixed32() const;
  void _internal_set_optional_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional sfixed32 optional_sfixed32 = 28;
  bool has_optional_sfixed32() const;
  private:
  bool _internal_has_optional_sfixed32() const;
  public:
  void clear_optional_sfixed32();
  ::PROTOBUF_NAMESPACE_ID::int32 optional_sfixed32() const;
  void set_optional_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_optional_sfixed32() const;
  void _internal_set_optional_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional sfixed64 optional_sfixed64 = 29;
  bool has_optional_sfixed64() const;
  private:
  bool _internal_has_optional_sfixed64() const;
  public:
  void clear_optional_sfixed64();
  ::PROTOBUF_NAMESPACE_ID::int64 optional_sfixed64() const;
  void set_optional_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_optional_sfixed64() const;
  void _internal_set_optional_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional .protobuf_mutator.Msg.Enum optional_enum = 33;
  bool has_optional_enum() const;
  private:
  bool _internal_has_optional_enum() const;
  public:
  void clear_optional_enum();
  ::protobuf_mutator::Msg_Enum optional_enum() const;
  void set_optional_enum(::protobuf_mutator::Msg_Enum value);
  private:
  ::protobuf_mutator::Msg_Enum _internal_optional_enum() const;
  void _internal_set_optional_enum(::protobuf_mutator::Msg_Enum value);
  public:

  // double oneof_double = 52;
  bool has_oneof_double() const;
  private:
  bool _internal_has_oneof_double() const;
  public:
  void clear_oneof_double();
  double oneof_double() const;
  void set_oneof_double(double value);
  private:
  double _internal_oneof_double() const;
  void _internal_set_oneof_double(double value);
  public:

  // float oneof_float = 53;
  bool has_oneof_float() const;
  private:
  bool _internal_has_oneof_float() const;
  public:
  void clear_oneof_float();
  float oneof_float() const;
  void set_oneof_float(float value);
  private:
  float _internal_oneof_float() const;
  void _internal_set_oneof_float(float value);
  public:

  // int32 oneof_int32 = 54;
  bool has_oneof_int32() const;
  private:
  bool _internal_has_oneof_int32() const;
  public:
  void clear_oneof_int32();
  ::PROTOBUF_NAMESPACE_ID::int32 oneof_int32() const;
  void set_oneof_int32(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_oneof_int32() const;
  void _internal_set_oneof_int32(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 oneof_int64 = 55;
  bool has_oneof_int64() const;
  private:
  bool _internal_has_oneof_int64() const;
  public:
  void clear_oneof_int64();
  ::PROTOBUF_NAMESPACE_ID::int64 oneof_int64() const;
  void set_oneof_int64(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_oneof_int64() const;
  void _internal_set_oneof_int64(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // uint32 oneof_uint32 = 56;
  bool has_oneof_uint32() const;
  private:
  bool _internal_has_oneof_uint32() const;
  public:
  void clear_oneof_uint32();
  ::PROTOBUF_NAMESPACE_ID::uint32 oneof_uint32() const;
  void set_oneof_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_oneof_uint32() const;
  void _internal_set_oneof_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 oneof_uint64 = 57;
  bool has_oneof_uint64() const;
  private:
  bool _internal_has_oneof_uint64() const;
  public:
  void clear_oneof_uint64();
  ::PROTOBUF_NAMESPACE_ID::uint64 oneof_uint64() const;
  void set_oneof_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_oneof_uint64() const;
  void _internal_set_oneof_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // sint32 oneof_sint32 = 58;
  bool has_oneof_sint32() const;
  private:
  bool _internal_has_oneof_sint32() const;
  public:
  void clear_oneof_sint32();
  ::PROTOBUF_NAMESPACE_ID::int32 oneof_sint32() const;
  void set_oneof_sint32(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_oneof_sint32() const;
  void _internal_set_oneof_sint32(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint64 oneof_sint64 = 59;
  bool has_oneof_sint64() const;
  private:
  bool _internal_has_oneof_sint64() const;
  public:
  void clear_oneof_sint64();
  ::PROTOBUF_NAMESPACE_ID::int64 oneof_sint64() const;
  void set_oneof_sint64(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_oneof_sint64() const;
  void _internal_set_oneof_sint64(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // fixed32 oneof_fixed32 = 60;
  bool has_oneof_fixed32() const;
  private:
  bool _internal_has_oneof_fixed32() const;
  public:
  void clear_oneof_fixed32();
  ::PROTOBUF_NAMESPACE_ID::uint32 oneof_fixed32() const;
  void set_oneof_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_oneof_fixed32() const;
  void _internal_set_oneof_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // fixed64 oneof_fixed64 = 61;
  bool has_oneof_fixed64() const;
  private:
  bool _internal_has_oneof_fixed64() const;
  public:
  void clear_oneof_fixed64();
  ::PROTOBUF_NAMESPACE_ID::uint64 oneof_fixed64() const;
  void set_oneof_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_oneof_fixed64() const;
  void _internal_set_oneof_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // sfixed32 oneof_sfixed32 = 62;
  bool has_oneof_sfixed32() const;
  private:
  bool _internal_has_oneof_sfixed32() const;
  public:
  void clear_oneof_sfixed32();
  ::PROTOBUF_NAMESPACE_ID::int32 oneof_sfixed32() const;
  void set_oneof_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_oneof_sfixed32() const;
  void _internal_set_oneof_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sfixed64 oneof_sfixed64 = 63;
  bool has_oneof_sfixed64() const;
  private:
  bool _internal_has_oneof_sfixed64() const;
  public:
  void clear_oneof_sfixed64();
  ::PROTOBUF_NAMESPACE_ID::int64 oneof_sfixed64() const;
  void set_oneof_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_oneof_sfixed64() const;
  void _internal_set_oneof_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // bool oneof_bool = 64;
  bool has_oneof_bool() const;
  private:
  bool _internal_has_oneof_bool() const;
  public:
  void clear_oneof_bool();
  bool oneof_bool() const;
  void set_oneof_bool(bool value);
  private:
  bool _internal_oneof_bool() const;
  void _internal_set_oneof_bool(bool value);
  public:

  // string oneof_string = 65;
  bool has_oneof_string() const;
  private:
  bool _internal_has_oneof_string() const;
  public:
  void clear_oneof_string();
  const std::string& oneof_string() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_oneof_string(ArgT0&& arg0, ArgT... args);
  std::string* mutable_oneof_string();
  PROTOBUF_MUST_USE_RESULT std::string* release_oneof_string();
  void set_allocated_oneof_string(std::string* oneof_string);
  private:
  const std::string& _internal_oneof_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oneof_string(const std::string& value);
  std::string* _internal_mutable_oneof_string();
  public:

  // bytes oneof_bytes = 66;
  bool has_oneof_bytes() const;
  private:
  bool _internal_has_oneof_bytes() const;
  public:
  void clear_oneof_bytes();
  const std::string& oneof_bytes() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_oneof_bytes(ArgT0&& arg0, ArgT... args);
  std::string* mutable_oneof_bytes();
  PROTOBUF_MUST_USE_RESULT std::string* release_oneof_bytes();
  void set_allocated_oneof_bytes(std::string* oneof_bytes);
  private:
  const std::string& _internal_oneof_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oneof_bytes(const std::string& value);
  std::string* _internal_mutable_oneof_bytes();
  public:

  // .protobuf_mutator.Msg.Enum oneof_enum = 67;
  bool has_oneof_enum() const;
  private:
  bool _internal_has_oneof_enum() const;
  public:
  void clear_oneof_enum();
  ::protobuf_mutator::Msg_Enum oneof_enum() const;
  void set_oneof_enum(::protobuf_mutator::Msg_Enum value);
  private:
  ::protobuf_mutator::Msg_Enum _internal_oneof_enum() const;
  void _internal_set_oneof_enum(::protobuf_mutator::Msg_Enum value);
  public:

  // .protobuf_mutator.Msg oneof_msg = 68;
  bool has_oneof_msg() const;
  private:
  bool _internal_has_oneof_msg() const;
  public:
  void clear_oneof_msg();
  const ::protobuf_mutator::Msg& oneof_msg() const;
  PROTOBUF_MUST_USE_RESULT ::protobuf_mutator::Msg* release_oneof_msg();
  ::protobuf_mutator::Msg* mutable_oneof_msg();
  void set_allocated_oneof_msg(::protobuf_mutator::Msg* oneof_msg);
  private:
  const ::protobuf_mutator::Msg& _internal_oneof_msg() const;
  ::protobuf_mutator::Msg* _internal_mutable_oneof_msg();
  public:
  void unsafe_arena_set_allocated_oneof_msg(
      ::protobuf_mutator::Msg* oneof_msg);
  ::protobuf_mutator::Msg* unsafe_arena_release_oneof_msg();

  void clear_OneOf();
  OneOfCase OneOf_case() const;
  // @@protoc_insertion_point(class_scope:protobuf_mutator.Msg)
 private:
  class _Internal;
  void set_has_oneof_double();
  void set_has_oneof_float();
  void set_has_oneof_int32();
  void set_has_oneof_int64();
  void set_has_oneof_uint32();
  void set_has_oneof_uint64();
  void set_has_oneof_sint32();
  void set_has_oneof_sint64();
  void set_has_oneof_fixed32();
  void set_has_oneof_fixed64();
  void set_has_oneof_sfixed32();
  void set_has_oneof_sfixed64();
  void set_has_oneof_bool();
  void set_has_oneof_string();
  void set_has_oneof_bytes();
  void set_has_oneof_enum();
  void set_has_oneof_msg();

  inline bool has_OneOf() const;
  inline void clear_has_OneOf();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<2> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > repeated_double_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > repeated_float_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > repeated_int32_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > repeated_int64_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > repeated_uint32_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > repeated_uint64_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > repeated_sint32_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > repeated_sint64_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > repeated_fixed32_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > repeated_fixed64_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > repeated_sfixed32_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > repeated_sfixed64_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > repeated_bool_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> repeated_string_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> repeated_bytes_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> repeated_enum_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_mutator::Msg > repeated_msg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr required_string_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr required_bytes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr optional_string_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr optional_bytes_;
  ::protobuf_mutator::Msg_SubMsg* required_msg_;
  ::protobuf_mutator::Msg* optional_msg_;
  ::protobuf_mutator::Msg_SubMsg* sub_message_;
  ::protobuf_mutator::Msg_Group* group_;
  PROTOBUF_NAMESPACE_ID::Any* any_;
  double required_double_;
  float required_float_;
  ::PROTOBUF_NAMESPACE_ID::int32 required_int32_;
  ::PROTOBUF_NAMESPACE_ID::int64 required_int64_;
  ::PROTOBUF_NAMESPACE_ID::uint64 required_uint64_;
  ::PROTOBUF_NAMESPACE_ID::uint32 required_uint32_;
  ::PROTOBUF_NAMESPACE_ID::int32 required_sint32_;
  ::PROTOBUF_NAMESPACE_ID::int64 required_sint64_;
  ::PROTOBUF_NAMESPACE_ID::uint64 required_fixed64_;
  ::PROTOBUF_NAMESPACE_ID::uint32 required_fixed32_;
  ::PROTOBUF_NAMESPACE_ID::int32 required_sfixed32_;
  ::PROTOBUF_NAMESPACE_ID::int64 required_sfixed64_;
  int required_enum_;
  float optional_float_;
  double optional_double_;
  ::PROTOBUF_NAMESPACE_ID::int64 optional_int64_;
  ::PROTOBUF_NAMESPACE_ID::int32 optional_int32_;
  bool required_bool_;
  bool optional_bool_;
  ::PROTOBUF_NAMESPACE_ID::uint64 optional_uint64_;
  ::PROTOBUF_NAMESPACE_ID::uint32 optional_uint32_;
  ::PROTOBUF_NAMESPACE_ID::int32 optional_sint32_;
  ::PROTOBUF_NAMESPACE_ID::int64 optional_sint64_;
  ::PROTOBUF_NAMESPACE_ID::uint64 optional_fixed64_;
  ::PROTOBUF_NAMESPACE_ID::uint32 optional_fixed32_;
  ::PROTOBUF_NAMESPACE_ID::int32 optional_sfixed32_;
  ::PROTOBUF_NAMESPACE_ID::int64 optional_sfixed64_;
  int optional_enum_;
  union OneOfUnion {
    constexpr OneOfUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    double oneof_double_;
    float oneof_float_;
    ::PROTOBUF_NAMESPACE_ID::int32 oneof_int32_;
    ::PROTOBUF_NAMESPACE_ID::int64 oneof_int64_;
    ::PROTOBUF_NAMESPACE_ID::uint32 oneof_uint32_;
    ::PROTOBUF_NAMESPACE_ID::uint64 oneof_uint64_;
    ::PROTOBUF_NAMESPACE_ID::int32 oneof_sint32_;
    ::PROTOBUF_NAMESPACE_ID::int64 oneof_sint64_;
    ::PROTOBUF_NAMESPACE_ID::uint32 oneof_fixed32_;
    ::PROTOBUF_NAMESPACE_ID::uint64 oneof_fixed64_;
    ::PROTOBUF_NAMESPACE_ID::int32 oneof_sfixed32_;
    ::PROTOBUF_NAMESPACE_ID::int64 oneof_sfixed64_;
    bool oneof_bool_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr oneof_string_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr oneof_bytes_;
    int oneof_enum_;
    ::protobuf_mutator::Msg* oneof_msg_;
  } OneOf_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_mutator_5ftest_5fproto2_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Msg_SubMsg

// optional int64 optional_int64 = 1;
inline bool Msg_SubMsg::_internal_has_optional_int64() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Msg_SubMsg::has_optional_int64() const {
  return _internal_has_optional_int64();
}
inline void Msg_SubMsg::clear_optional_int64() {
  optional_int64_ = int64_t{0};
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg_SubMsg::_internal_optional_int64() const {
  return optional_int64_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg_SubMsg::optional_int64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.SubMsg.optional_int64)
  return _internal_optional_int64();
}
inline void Msg_SubMsg::_internal_set_optional_int64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  optional_int64_ = value;
}
inline void Msg_SubMsg::set_optional_int64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_optional_int64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.SubMsg.optional_int64)
}

// -------------------------------------------------------------------

// Msg_Group

// required bool required_bool = 1;
inline bool Msg_Group::_internal_has_required_bool() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Msg_Group::has_required_bool() const {
  return _internal_has_required_bool();
}
inline void Msg_Group::clear_required_bool() {
  required_bool_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool Msg_Group::_internal_required_bool() const {
  return required_bool_;
}
inline bool Msg_Group::required_bool() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.Group.required_bool)
  return _internal_required_bool();
}
inline void Msg_Group::_internal_set_required_bool(bool value) {
  _has_bits_[0] |= 0x00000001u;
  required_bool_ = value;
}
inline void Msg_Group::set_required_bool(bool value) {
  _internal_set_required_bool(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.Group.required_bool)
}

// optional bool optional_bool = 2;
inline bool Msg_Group::_internal_has_optional_bool() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Msg_Group::has_optional_bool() const {
  return _internal_has_optional_bool();
}
inline void Msg_Group::clear_optional_bool() {
  optional_bool_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool Msg_Group::_internal_optional_bool() const {
  return optional_bool_;
}
inline bool Msg_Group::optional_bool() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.Group.optional_bool)
  return _internal_optional_bool();
}
inline void Msg_Group::_internal_set_optional_bool(bool value) {
  _has_bits_[0] |= 0x00000002u;
  optional_bool_ = value;
}
inline void Msg_Group::set_optional_bool(bool value) {
  _internal_set_optional_bool(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.Group.optional_bool)
}

// repeated bool repeated_bool = 3;
inline int Msg_Group::_internal_repeated_bool_size() const {
  return repeated_bool_.size();
}
inline int Msg_Group::repeated_bool_size() const {
  return _internal_repeated_bool_size();
}
inline void Msg_Group::clear_repeated_bool() {
  repeated_bool_.Clear();
}
inline bool Msg_Group::_internal_repeated_bool(int index) const {
  return repeated_bool_.Get(index);
}
inline bool Msg_Group::repeated_bool(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.Group.repeated_bool)
  return _internal_repeated_bool(index);
}
inline void Msg_Group::set_repeated_bool(int index, bool value) {
  repeated_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.Group.repeated_bool)
}
inline void Msg_Group::_internal_add_repeated_bool(bool value) {
  repeated_bool_.Add(value);
}
inline void Msg_Group::add_repeated_bool(bool value) {
  _internal_add_repeated_bool(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.Group.repeated_bool)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
Msg_Group::_internal_repeated_bool() const {
  return repeated_bool_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
Msg_Group::repeated_bool() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.Group.repeated_bool)
  return _internal_repeated_bool();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
Msg_Group::_internal_mutable_repeated_bool() {
  return &repeated_bool_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
Msg_Group::mutable_repeated_bool() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.Group.repeated_bool)
  return _internal_mutable_repeated_bool();
}

// -------------------------------------------------------------------

// Msg_EmptyMessage

// -------------------------------------------------------------------

// Msg_RegressionMessage

// optional .protobuf_mutator.Msg.RegressionMessage.SingleValueEnum enum = 2;
inline bool Msg_RegressionMessage::_internal_has_enum_() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Msg_RegressionMessage::has_enum_() const {
  return _internal_has_enum_();
}
inline void Msg_RegressionMessage::clear_enum_() {
  enum__ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum Msg_RegressionMessage::_internal_enum_() const {
  return static_cast< ::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum >(enum__);
}
inline ::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum Msg_RegressionMessage::enum_() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.RegressionMessage.enum)
  return _internal_enum_();
}
inline void Msg_RegressionMessage::_internal_set_enum_(::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum value) {
  assert(::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  enum__ = value;
}
inline void Msg_RegressionMessage::set_enum_(::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum value) {
  _internal_set_enum_(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.RegressionMessage.enum)
}

// -------------------------------------------------------------------

// Msg_SmallMessage

// optional bool opt_bool = 1;
inline bool Msg_SmallMessage::_internal_has_opt_bool() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Msg_SmallMessage::has_opt_bool() const {
  return _internal_has_opt_bool();
}
inline void Msg_SmallMessage::clear_opt_bool() {
  opt_bool_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool Msg_SmallMessage::_internal_opt_bool() const {
  return opt_bool_;
}
inline bool Msg_SmallMessage::opt_bool() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.SmallMessage.opt_bool)
  return _internal_opt_bool();
}
inline void Msg_SmallMessage::_internal_set_opt_bool(bool value) {
  _has_bits_[0] |= 0x00000001u;
  opt_bool_ = value;
}
inline void Msg_SmallMessage::set_opt_bool(bool value) {
  _internal_set_opt_bool(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.SmallMessage.opt_bool)
}

// optional .protobuf_mutator.Msg.SmallMessage.Enum opt_enum = 2;
inline bool Msg_SmallMessage::_internal_has_opt_enum() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Msg_SmallMessage::has_opt_enum() const {
  return _internal_has_opt_enum();
}
inline void Msg_SmallMessage::clear_opt_enum() {
  opt_enum_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::protobuf_mutator::Msg_SmallMessage_Enum Msg_SmallMessage::_internal_opt_enum() const {
  return static_cast< ::protobuf_mutator::Msg_SmallMessage_Enum >(opt_enum_);
}
inline ::protobuf_mutator::Msg_SmallMessage_Enum Msg_SmallMessage::opt_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.SmallMessage.opt_enum)
  return _internal_opt_enum();
}
inline void Msg_SmallMessage::_internal_set_opt_enum(::protobuf_mutator::Msg_SmallMessage_Enum value) {
  assert(::protobuf_mutator::Msg_SmallMessage_Enum_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  opt_enum_ = value;
}
inline void Msg_SmallMessage::set_opt_enum(::protobuf_mutator::Msg_SmallMessage_Enum value) {
  _internal_set_opt_enum(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.SmallMessage.opt_enum)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Msg_MapMessage

// map<string, int32> map1 = 1;
inline int Msg_MapMessage::_internal_map1_size() const {
  return map1_.size();
}
inline int Msg_MapMessage::map1_size() const {
  return _internal_map1_size();
}
inline void Msg_MapMessage::clear_map1() {
  map1_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >&
Msg_MapMessage::_internal_map1() const {
  return map1_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >&
Msg_MapMessage::map1() const {
  // @@protoc_insertion_point(field_map:protobuf_mutator.Msg.MapMessage.map1)
  return _internal_map1();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >*
Msg_MapMessage::_internal_mutable_map1() {
  return map1_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >*
Msg_MapMessage::mutable_map1() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_mutator.Msg.MapMessage.map1)
  return _internal_mutable_map1();
}

// map<int32, .protobuf_mutator.Msg> map2 = 2;
inline int Msg_MapMessage::_internal_map2_size() const {
  return map2_.size();
}
inline int Msg_MapMessage::map2_size() const {
  return _internal_map2_size();
}
inline void Msg_MapMessage::clear_map2() {
  map2_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_mutator::Msg >&
Msg_MapMessage::_internal_map2() const {
  return map2_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_mutator::Msg >&
Msg_MapMessage::map2() const {
  // @@protoc_insertion_point(field_map:protobuf_mutator.Msg.MapMessage.map2)
  return _internal_map2();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_mutator::Msg >*
Msg_MapMessage::_internal_mutable_map2() {
  return map2_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::protobuf_mutator::Msg >*
Msg_MapMessage::mutable_map2() {
  // @@protoc_insertion_point(field_mutable_map:protobuf_mutator.Msg.MapMessage.map2)
  return _internal_mutable_map2();
}

// -------------------------------------------------------------------

// Msg

// required double required_double = 1;
inline bool Msg::_internal_has_required_double() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool Msg::has_required_double() const {
  return _internal_has_required_double();
}
inline void Msg::clear_required_double() {
  required_double_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline double Msg::_internal_required_double() const {
  return required_double_;
}
inline double Msg::required_double() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_double)
  return _internal_required_double();
}
inline void Msg::_internal_set_required_double(double value) {
  _has_bits_[0] |= 0x00000200u;
  required_double_ = value;
}
inline void Msg::set_required_double(double value) {
  _internal_set_required_double(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_double)
}

// required float required_float = 2;
inline bool Msg::_internal_has_required_float() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool Msg::has_required_float() const {
  return _internal_has_required_float();
}
inline void Msg::clear_required_float() {
  required_float_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline float Msg::_internal_required_float() const {
  return required_float_;
}
inline float Msg::required_float() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_float)
  return _internal_required_float();
}
inline void Msg::_internal_set_required_float(float value) {
  _has_bits_[0] |= 0x00000400u;
  required_float_ = value;
}
inline void Msg::set_required_float(float value) {
  _internal_set_required_float(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_float)
}

// required int32 required_int32 = 3;
inline bool Msg::_internal_has_required_int32() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool Msg::has_required_int32() const {
  return _internal_has_required_int32();
}
inline void Msg::clear_required_int32() {
  required_int32_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_required_int32() const {
  return required_int32_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::required_int32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_int32)
  return _internal_required_int32();
}
inline void Msg::_internal_set_required_int32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  required_int32_ = value;
}
inline void Msg::set_required_int32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_required_int32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_int32)
}

// required int64 required_int64 = 4;
inline bool Msg::_internal_has_required_int64() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool Msg::has_required_int64() const {
  return _internal_has_required_int64();
}
inline void Msg::clear_required_int64() {
  required_int64_ = int64_t{0};
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_required_int64() const {
  return required_int64_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::required_int64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_int64)
  return _internal_required_int64();
}
inline void Msg::_internal_set_required_int64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00001000u;
  required_int64_ = value;
}
inline void Msg::set_required_int64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_required_int64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_int64)
}

// required uint32 required_uint32 = 5;
inline bool Msg::_internal_has_required_uint32() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool Msg::has_required_uint32() const {
  return _internal_has_required_uint32();
}
inline void Msg::clear_required_uint32() {
  required_uint32_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::_internal_required_uint32() const {
  return required_uint32_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::required_uint32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_uint32)
  return _internal_required_uint32();
}
inline void Msg::_internal_set_required_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  required_uint32_ = value;
}
inline void Msg::set_required_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_required_uint32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_uint32)
}

// required uint64 required_uint64 = 6;
inline bool Msg::_internal_has_required_uint64() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool Msg::has_required_uint64() const {
  return _internal_has_required_uint64();
}
inline void Msg::clear_required_uint64() {
  required_uint64_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::_internal_required_uint64() const {
  return required_uint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::required_uint64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_uint64)
  return _internal_required_uint64();
}
inline void Msg::_internal_set_required_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00002000u;
  required_uint64_ = value;
}
inline void Msg::set_required_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_required_uint64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_uint64)
}

// required sint32 required_sint32 = 7;
inline bool Msg::_internal_has_required_sint32() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool Msg::has_required_sint32() const {
  return _internal_has_required_sint32();
}
inline void Msg::clear_required_sint32() {
  required_sint32_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_required_sint32() const {
  return required_sint32_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::required_sint32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_sint32)
  return _internal_required_sint32();
}
inline void Msg::_internal_set_required_sint32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00008000u;
  required_sint32_ = value;
}
inline void Msg::set_required_sint32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_required_sint32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_sint32)
}

// required sint64 required_sint64 = 8;
inline bool Msg::_internal_has_required_sint64() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool Msg::has_required_sint64() const {
  return _internal_has_required_sint64();
}
inline void Msg::clear_required_sint64() {
  required_sint64_ = int64_t{0};
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_required_sint64() const {
  return required_sint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::required_sint64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_sint64)
  return _internal_required_sint64();
}
inline void Msg::_internal_set_required_sint64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00010000u;
  required_sint64_ = value;
}
inline void Msg::set_required_sint64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_required_sint64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_sint64)
}

// required fixed32 required_fixed32 = 9;
inline bool Msg::_internal_has_required_fixed32() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool Msg::has_required_fixed32() const {
  return _internal_has_required_fixed32();
}
inline void Msg::clear_required_fixed32() {
  required_fixed32_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::_internal_required_fixed32() const {
  return required_fixed32_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::required_fixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_fixed32)
  return _internal_required_fixed32();
}
inline void Msg::_internal_set_required_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  required_fixed32_ = value;
}
inline void Msg::set_required_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_required_fixed32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_fixed32)
}

// required fixed64 required_fixed64 = 10;
inline bool Msg::_internal_has_required_fixed64() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool Msg::has_required_fixed64() const {
  return _internal_has_required_fixed64();
}
inline void Msg::clear_required_fixed64() {
  required_fixed64_ = uint64_t{0u};
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::_internal_required_fixed64() const {
  return required_fixed64_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::required_fixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_fixed64)
  return _internal_required_fixed64();
}
inline void Msg::_internal_set_required_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00020000u;
  required_fixed64_ = value;
}
inline void Msg::set_required_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_required_fixed64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_fixed64)
}

// required sfixed32 required_sfixed32 = 11;
inline bool Msg::_internal_has_required_sfixed32() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool Msg::has_required_sfixed32() const {
  return _internal_has_required_sfixed32();
}
inline void Msg::clear_required_sfixed32() {
  required_sfixed32_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_required_sfixed32() const {
  return required_sfixed32_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::required_sfixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_sfixed32)
  return _internal_required_sfixed32();
}
inline void Msg::_internal_set_required_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00080000u;
  required_sfixed32_ = value;
}
inline void Msg::set_required_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_required_sfixed32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_sfixed32)
}

// required sfixed64 required_sfixed64 = 12;
inline bool Msg::_internal_has_required_sfixed64() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool Msg::has_required_sfixed64() const {
  return _internal_has_required_sfixed64();
}
inline void Msg::clear_required_sfixed64() {
  required_sfixed64_ = int64_t{0};
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_required_sfixed64() const {
  return required_sfixed64_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::required_sfixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_sfixed64)
  return _internal_required_sfixed64();
}
inline void Msg::_internal_set_required_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00100000u;
  required_sfixed64_ = value;
}
inline void Msg::set_required_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_required_sfixed64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_sfixed64)
}

// required bool required_bool = 13;
inline bool Msg::_internal_has_required_bool() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool Msg::has_required_bool() const {
  return _internal_has_required_bool();
}
inline void Msg::clear_required_bool() {
  required_bool_ = false;
  _has_bits_[0] &= ~0x04000000u;
}
inline bool Msg::_internal_required_bool() const {
  return required_bool_;
}
inline bool Msg::required_bool() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_bool)
  return _internal_required_bool();
}
inline void Msg::_internal_set_required_bool(bool value) {
  _has_bits_[0] |= 0x04000000u;
  required_bool_ = value;
}
inline void Msg::set_required_bool(bool value) {
  _internal_set_required_bool(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_bool)
}

// required string required_string = 14;
inline bool Msg::_internal_has_required_string() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Msg::has_required_string() const {
  return _internal_has_required_string();
}
inline void Msg::clear_required_string() {
  required_string_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Msg::required_string() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_string)
  return _internal_required_string();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg::set_required_string(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 required_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_string)
}
inline std::string* Msg::mutable_required_string() {
  std::string* _s = _internal_mutable_required_string();
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.required_string)
  return _s;
}
inline const std::string& Msg::_internal_required_string() const {
  return required_string_.Get();
}
inline void Msg::_internal_set_required_string(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  required_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* Msg::_internal_mutable_required_string() {
  _has_bits_[0] |= 0x00000001u;
  return required_string_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* Msg::release_required_string() {
  // @@protoc_insertion_point(field_release:protobuf_mutator.Msg.required_string)
  if (!_internal_has_required_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return required_string_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void Msg::set_allocated_required_string(std::string* required_string) {
  if (required_string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  required_string_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), required_string,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:protobuf_mutator.Msg.required_string)
}

// required bytes required_bytes = 15;
inline bool Msg::_internal_has_required_bytes() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Msg::has_required_bytes() const {
  return _internal_has_required_bytes();
}
inline void Msg::clear_required_bytes() {
  required_bytes_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Msg::required_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_bytes)
  return _internal_required_bytes();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg::set_required_bytes(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000002u;
 required_bytes_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_bytes)
}
inline std::string* Msg::mutable_required_bytes() {
  std::string* _s = _internal_mutable_required_bytes();
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.required_bytes)
  return _s;
}
inline const std::string& Msg::_internal_required_bytes() const {
  return required_bytes_.Get();
}
inline void Msg::_internal_set_required_bytes(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  required_bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* Msg::_internal_mutable_required_bytes() {
  _has_bits_[0] |= 0x00000002u;
  return required_bytes_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* Msg::release_required_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_mutator.Msg.required_bytes)
  if (!_internal_has_required_bytes()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return required_bytes_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void Msg::set_allocated_required_bytes(std::string* required_bytes) {
  if (required_bytes != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  required_bytes_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), required_bytes,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:protobuf_mutator.Msg.required_bytes)
}

// required .protobuf_mutator.Msg.Enum required_enum = 16;
inline bool Msg::_internal_has_required_enum() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool Msg::has_required_enum() const {
  return _internal_has_required_enum();
}
inline void Msg::clear_required_enum() {
  required_enum_ = 0;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::protobuf_mutator::Msg_Enum Msg::_internal_required_enum() const {
  return static_cast< ::protobuf_mutator::Msg_Enum >(required_enum_);
}
inline ::protobuf_mutator::Msg_Enum Msg::required_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_enum)
  return _internal_required_enum();
}
inline void Msg::_internal_set_required_enum(::protobuf_mutator::Msg_Enum value) {
  assert(::protobuf_mutator::Msg_Enum_IsValid(value));
  _has_bits_[0] |= 0x00200000u;
  required_enum_ = value;
}
inline void Msg::set_required_enum(::protobuf_mutator::Msg_Enum value) {
  _internal_set_required_enum(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.required_enum)
}

// required .protobuf_mutator.Msg.SubMsg required_msg = 17;
inline bool Msg::_internal_has_required_msg() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || required_msg_ != nullptr);
  return value;
}
inline bool Msg::has_required_msg() const {
  return _internal_has_required_msg();
}
inline void Msg::clear_required_msg() {
  if (required_msg_ != nullptr) required_msg_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::protobuf_mutator::Msg_SubMsg& Msg::_internal_required_msg() const {
  const ::protobuf_mutator::Msg_SubMsg* p = required_msg_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_mutator::Msg_SubMsg&>(
      ::protobuf_mutator::_Msg_SubMsg_default_instance_);
}
inline const ::protobuf_mutator::Msg_SubMsg& Msg::required_msg() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.required_msg)
  return _internal_required_msg();
}
inline void Msg::unsafe_arena_set_allocated_required_msg(
    ::protobuf_mutator::Msg_SubMsg* required_msg) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(required_msg_);
  }
  required_msg_ = required_msg;
  if (required_msg) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_mutator.Msg.required_msg)
}
inline ::protobuf_mutator::Msg_SubMsg* Msg::release_required_msg() {
  _has_bits_[0] &= ~0x00000010u;
  ::protobuf_mutator::Msg_SubMsg* temp = required_msg_;
  required_msg_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_mutator::Msg_SubMsg* Msg::unsafe_arena_release_required_msg() {
  // @@protoc_insertion_point(field_release:protobuf_mutator.Msg.required_msg)
  _has_bits_[0] &= ~0x00000010u;
  ::protobuf_mutator::Msg_SubMsg* temp = required_msg_;
  required_msg_ = nullptr;
  return temp;
}
inline ::protobuf_mutator::Msg_SubMsg* Msg::_internal_mutable_required_msg() {
  _has_bits_[0] |= 0x00000010u;
  if (required_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_mutator::Msg_SubMsg>(GetArenaForAllocation());
    required_msg_ = p;
  }
  return required_msg_;
}
inline ::protobuf_mutator::Msg_SubMsg* Msg::mutable_required_msg() {
  ::protobuf_mutator::Msg_SubMsg* _msg = _internal_mutable_required_msg();
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.required_msg)
  return _msg;
}
inline void Msg::set_allocated_required_msg(::protobuf_mutator::Msg_SubMsg* required_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete required_msg_;
  }
  if (required_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::protobuf_mutator::Msg_SubMsg>::GetOwningArena(required_msg);
    if (message_arena != submessage_arena) {
      required_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, required_msg, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  required_msg_ = required_msg;
  // @@protoc_insertion_point(field_set_allocated:protobuf_mutator.Msg.required_msg)
}

// optional double optional_double = 18;
inline bool Msg::_internal_has_optional_double() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool Msg::has_optional_double() const {
  return _internal_has_optional_double();
}
inline void Msg::clear_optional_double() {
  optional_double_ = 0;
  _has_bits_[0] &= ~0x00800000u;
}
inline double Msg::_internal_optional_double() const {
  return optional_double_;
}
inline double Msg::optional_double() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_double)
  return _internal_optional_double();
}
inline void Msg::_internal_set_optional_double(double value) {
  _has_bits_[0] |= 0x00800000u;
  optional_double_ = value;
}
inline void Msg::set_optional_double(double value) {
  _internal_set_optional_double(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_double)
}

// optional float optional_float = 19;
inline bool Msg::_internal_has_optional_float() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool Msg::has_optional_float() const {
  return _internal_has_optional_float();
}
inline void Msg::clear_optional_float() {
  optional_float_ = 0;
  _has_bits_[0] &= ~0x00400000u;
}
inline float Msg::_internal_optional_float() const {
  return optional_float_;
}
inline float Msg::optional_float() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_float)
  return _internal_optional_float();
}
inline void Msg::_internal_set_optional_float(float value) {
  _has_bits_[0] |= 0x00400000u;
  optional_float_ = value;
}
inline void Msg::set_optional_float(float value) {
  _internal_set_optional_float(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_float)
}

// optional int32 optional_int32 = 20;
inline bool Msg::_internal_has_optional_int32() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool Msg::has_optional_int32() const {
  return _internal_has_optional_int32();
}
inline void Msg::clear_optional_int32() {
  optional_int32_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_optional_int32() const {
  return optional_int32_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::optional_int32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_int32)
  return _internal_optional_int32();
}
inline void Msg::_internal_set_optional_int32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x02000000u;
  optional_int32_ = value;
}
inline void Msg::set_optional_int32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_optional_int32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_int32)
}

// optional int64 optional_int64 = 21;
inline bool Msg::_internal_has_optional_int64() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool Msg::has_optional_int64() const {
  return _internal_has_optional_int64();
}
inline void Msg::clear_optional_int64() {
  optional_int64_ = int64_t{0};
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_optional_int64() const {
  return optional_int64_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::optional_int64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_int64)
  return _internal_optional_int64();
}
inline void Msg::_internal_set_optional_int64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x01000000u;
  optional_int64_ = value;
}
inline void Msg::set_optional_int64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_optional_int64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_int64)
}

// optional uint32 optional_uint32 = 22;
inline bool Msg::_internal_has_optional_uint32() const {
  bool value = (_has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline bool Msg::has_optional_uint32() const {
  return _internal_has_optional_uint32();
}
inline void Msg::clear_optional_uint32() {
  optional_uint32_ = 0u;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::_internal_optional_uint32() const {
  return optional_uint32_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::optional_uint32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_uint32)
  return _internal_optional_uint32();
}
inline void Msg::_internal_set_optional_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x20000000u;
  optional_uint32_ = value;
}
inline void Msg::set_optional_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_optional_uint32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_uint32)
}

// optional uint64 optional_uint64 = 23;
inline bool Msg::_internal_has_optional_uint64() const {
  bool value = (_has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline bool Msg::has_optional_uint64() const {
  return _internal_has_optional_uint64();
}
inline void Msg::clear_optional_uint64() {
  optional_uint64_ = uint64_t{0u};
  _has_bits_[0] &= ~0x10000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::_internal_optional_uint64() const {
  return optional_uint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::optional_uint64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_uint64)
  return _internal_optional_uint64();
}
inline void Msg::_internal_set_optional_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x10000000u;
  optional_uint64_ = value;
}
inline void Msg::set_optional_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_optional_uint64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_uint64)
}

// optional sint32 optional_sint32 = 24;
inline bool Msg::_internal_has_optional_sint32() const {
  bool value = (_has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline bool Msg::has_optional_sint32() const {
  return _internal_has_optional_sint32();
}
inline void Msg::clear_optional_sint32() {
  optional_sint32_ = 0;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_optional_sint32() const {
  return optional_sint32_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::optional_sint32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_sint32)
  return _internal_optional_sint32();
}
inline void Msg::_internal_set_optional_sint32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x40000000u;
  optional_sint32_ = value;
}
inline void Msg::set_optional_sint32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_optional_sint32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_sint32)
}

// optional sint64 optional_sint64 = 25;
inline bool Msg::_internal_has_optional_sint64() const {
  bool value = (_has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline bool Msg::has_optional_sint64() const {
  return _internal_has_optional_sint64();
}
inline void Msg::clear_optional_sint64() {
  optional_sint64_ = int64_t{0};
  _has_bits_[0] &= ~0x80000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_optional_sint64() const {
  return optional_sint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::optional_sint64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_sint64)
  return _internal_optional_sint64();
}
inline void Msg::_internal_set_optional_sint64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x80000000u;
  optional_sint64_ = value;
}
inline void Msg::set_optional_sint64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_optional_sint64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_sint64)
}

// optional fixed32 optional_fixed32 = 26;
inline bool Msg::_internal_has_optional_fixed32() const {
  bool value = (_has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline bool Msg::has_optional_fixed32() const {
  return _internal_has_optional_fixed32();
}
inline void Msg::clear_optional_fixed32() {
  optional_fixed32_ = 0u;
  _has_bits_[1] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::_internal_optional_fixed32() const {
  return optional_fixed32_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::optional_fixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_fixed32)
  return _internal_optional_fixed32();
}
inline void Msg::_internal_set_optional_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000002u;
  optional_fixed32_ = value;
}
inline void Msg::set_optional_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_optional_fixed32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_fixed32)
}

// optional fixed64 optional_fixed64 = 27;
inline bool Msg::_internal_has_optional_fixed64() const {
  bool value = (_has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline bool Msg::has_optional_fixed64() const {
  return _internal_has_optional_fixed64();
}
inline void Msg::clear_optional_fixed64() {
  optional_fixed64_ = uint64_t{0u};
  _has_bits_[1] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::_internal_optional_fixed64() const {
  return optional_fixed64_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::optional_fixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_fixed64)
  return _internal_optional_fixed64();
}
inline void Msg::_internal_set_optional_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[1] |= 0x00000001u;
  optional_fixed64_ = value;
}
inline void Msg::set_optional_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_optional_fixed64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_fixed64)
}

// optional sfixed32 optional_sfixed32 = 28;
inline bool Msg::_internal_has_optional_sfixed32() const {
  bool value = (_has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline bool Msg::has_optional_sfixed32() const {
  return _internal_has_optional_sfixed32();
}
inline void Msg::clear_optional_sfixed32() {
  optional_sfixed32_ = 0;
  _has_bits_[1] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_optional_sfixed32() const {
  return optional_sfixed32_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::optional_sfixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_sfixed32)
  return _internal_optional_sfixed32();
}
inline void Msg::_internal_set_optional_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000004u;
  optional_sfixed32_ = value;
}
inline void Msg::set_optional_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_optional_sfixed32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_sfixed32)
}

// optional sfixed64 optional_sfixed64 = 29;
inline bool Msg::_internal_has_optional_sfixed64() const {
  bool value = (_has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline bool Msg::has_optional_sfixed64() const {
  return _internal_has_optional_sfixed64();
}
inline void Msg::clear_optional_sfixed64() {
  optional_sfixed64_ = int64_t{0};
  _has_bits_[1] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_optional_sfixed64() const {
  return optional_sfixed64_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::optional_sfixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_sfixed64)
  return _internal_optional_sfixed64();
}
inline void Msg::_internal_set_optional_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[1] |= 0x00000008u;
  optional_sfixed64_ = value;
}
inline void Msg::set_optional_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_optional_sfixed64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_sfixed64)
}

// optional bool optional_bool = 30;
inline bool Msg::_internal_has_optional_bool() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool Msg::has_optional_bool() const {
  return _internal_has_optional_bool();
}
inline void Msg::clear_optional_bool() {
  optional_bool_ = false;
  _has_bits_[0] &= ~0x08000000u;
}
inline bool Msg::_internal_optional_bool() const {
  return optional_bool_;
}
inline bool Msg::optional_bool() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_bool)
  return _internal_optional_bool();
}
inline void Msg::_internal_set_optional_bool(bool value) {
  _has_bits_[0] |= 0x08000000u;
  optional_bool_ = value;
}
inline void Msg::set_optional_bool(bool value) {
  _internal_set_optional_bool(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_bool)
}

// optional string optional_string = 31;
inline bool Msg::_internal_has_optional_string() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Msg::has_optional_string() const {
  return _internal_has_optional_string();
}
inline void Msg::clear_optional_string() {
  optional_string_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Msg::optional_string() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_string)
  return _internal_optional_string();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg::set_optional_string(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000004u;
 optional_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_string)
}
inline std::string* Msg::mutable_optional_string() {
  std::string* _s = _internal_mutable_optional_string();
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.optional_string)
  return _s;
}
inline const std::string& Msg::_internal_optional_string() const {
  return optional_string_.Get();
}
inline void Msg::_internal_set_optional_string(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  optional_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* Msg::_internal_mutable_optional_string() {
  _has_bits_[0] |= 0x00000004u;
  return optional_string_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* Msg::release_optional_string() {
  // @@protoc_insertion_point(field_release:protobuf_mutator.Msg.optional_string)
  if (!_internal_has_optional_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return optional_string_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void Msg::set_allocated_optional_string(std::string* optional_string) {
  if (optional_string != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  optional_string_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), optional_string,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:protobuf_mutator.Msg.optional_string)
}

// optional bytes optional_bytes = 32;
inline bool Msg::_internal_has_optional_bytes() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool Msg::has_optional_bytes() const {
  return _internal_has_optional_bytes();
}
inline void Msg::clear_optional_bytes() {
  optional_bytes_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Msg::optional_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_bytes)
  return _internal_optional_bytes();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Msg::set_optional_bytes(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000008u;
 optional_bytes_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_bytes)
}
inline std::string* Msg::mutable_optional_bytes() {
  std::string* _s = _internal_mutable_optional_bytes();
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.optional_bytes)
  return _s;
}
inline const std::string& Msg::_internal_optional_bytes() const {
  return optional_bytes_.Get();
}
inline void Msg::_internal_set_optional_bytes(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  optional_bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* Msg::_internal_mutable_optional_bytes() {
  _has_bits_[0] |= 0x00000008u;
  return optional_bytes_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* Msg::release_optional_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_mutator.Msg.optional_bytes)
  if (!_internal_has_optional_bytes()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return optional_bytes_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void Msg::set_allocated_optional_bytes(std::string* optional_bytes) {
  if (optional_bytes != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  optional_bytes_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), optional_bytes,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:protobuf_mutator.Msg.optional_bytes)
}

// optional .protobuf_mutator.Msg.Enum optional_enum = 33;
inline bool Msg::_internal_has_optional_enum() const {
  bool value = (_has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline bool Msg::has_optional_enum() const {
  return _internal_has_optional_enum();
}
inline void Msg::clear_optional_enum() {
  optional_enum_ = 0;
  _has_bits_[1] &= ~0x00000010u;
}
inline ::protobuf_mutator::Msg_Enum Msg::_internal_optional_enum() const {
  return static_cast< ::protobuf_mutator::Msg_Enum >(optional_enum_);
}
inline ::protobuf_mutator::Msg_Enum Msg::optional_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_enum)
  return _internal_optional_enum();
}
inline void Msg::_internal_set_optional_enum(::protobuf_mutator::Msg_Enum value) {
  assert(::protobuf_mutator::Msg_Enum_IsValid(value));
  _has_bits_[1] |= 0x00000010u;
  optional_enum_ = value;
}
inline void Msg::set_optional_enum(::protobuf_mutator::Msg_Enum value) {
  _internal_set_optional_enum(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.optional_enum)
}

// optional .protobuf_mutator.Msg optional_msg = 34;
inline bool Msg::_internal_has_optional_msg() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || optional_msg_ != nullptr);
  return value;
}
inline bool Msg::has_optional_msg() const {
  return _internal_has_optional_msg();
}
inline void Msg::clear_optional_msg() {
  if (optional_msg_ != nullptr) optional_msg_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::protobuf_mutator::Msg& Msg::_internal_optional_msg() const {
  const ::protobuf_mutator::Msg* p = optional_msg_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_mutator::Msg&>(
      ::protobuf_mutator::_Msg_default_instance_);
}
inline const ::protobuf_mutator::Msg& Msg::optional_msg() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.optional_msg)
  return _internal_optional_msg();
}
inline void Msg::unsafe_arena_set_allocated_optional_msg(
    ::protobuf_mutator::Msg* optional_msg) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(optional_msg_);
  }
  optional_msg_ = optional_msg;
  if (optional_msg) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_mutator.Msg.optional_msg)
}
inline ::protobuf_mutator::Msg* Msg::release_optional_msg() {
  _has_bits_[0] &= ~0x00000020u;
  ::protobuf_mutator::Msg* temp = optional_msg_;
  optional_msg_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_mutator::Msg* Msg::unsafe_arena_release_optional_msg() {
  // @@protoc_insertion_point(field_release:protobuf_mutator.Msg.optional_msg)
  _has_bits_[0] &= ~0x00000020u;
  ::protobuf_mutator::Msg* temp = optional_msg_;
  optional_msg_ = nullptr;
  return temp;
}
inline ::protobuf_mutator::Msg* Msg::_internal_mutable_optional_msg() {
  _has_bits_[0] |= 0x00000020u;
  if (optional_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_mutator::Msg>(GetArenaForAllocation());
    optional_msg_ = p;
  }
  return optional_msg_;
}
inline ::protobuf_mutator::Msg* Msg::mutable_optional_msg() {
  ::protobuf_mutator::Msg* _msg = _internal_mutable_optional_msg();
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.optional_msg)
  return _msg;
}
inline void Msg::set_allocated_optional_msg(::protobuf_mutator::Msg* optional_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete optional_msg_;
  }
  if (optional_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::protobuf_mutator::Msg>::GetOwningArena(optional_msg);
    if (message_arena != submessage_arena) {
      optional_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, optional_msg, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  optional_msg_ = optional_msg;
  // @@protoc_insertion_point(field_set_allocated:protobuf_mutator.Msg.optional_msg)
}

// repeated double repeated_double = 35;
inline int Msg::_internal_repeated_double_size() const {
  return repeated_double_.size();
}
inline int Msg::repeated_double_size() const {
  return _internal_repeated_double_size();
}
inline void Msg::clear_repeated_double() {
  repeated_double_.Clear();
}
inline double Msg::_internal_repeated_double(int index) const {
  return repeated_double_.Get(index);
}
inline double Msg::repeated_double(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_double)
  return _internal_repeated_double(index);
}
inline void Msg::set_repeated_double(int index, double value) {
  repeated_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_double)
}
inline void Msg::_internal_add_repeated_double(double value) {
  repeated_double_.Add(value);
}
inline void Msg::add_repeated_double(double value) {
  _internal_add_repeated_double(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_double)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Msg::_internal_repeated_double() const {
  return repeated_double_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Msg::repeated_double() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_double)
  return _internal_repeated_double();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Msg::_internal_mutable_repeated_double() {
  return &repeated_double_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Msg::mutable_repeated_double() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_double)
  return _internal_mutable_repeated_double();
}

// repeated float repeated_float = 36;
inline int Msg::_internal_repeated_float_size() const {
  return repeated_float_.size();
}
inline int Msg::repeated_float_size() const {
  return _internal_repeated_float_size();
}
inline void Msg::clear_repeated_float() {
  repeated_float_.Clear();
}
inline float Msg::_internal_repeated_float(int index) const {
  return repeated_float_.Get(index);
}
inline float Msg::repeated_float(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_float)
  return _internal_repeated_float(index);
}
inline void Msg::set_repeated_float(int index, float value) {
  repeated_float_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_float)
}
inline void Msg::_internal_add_repeated_float(float value) {
  repeated_float_.Add(value);
}
inline void Msg::add_repeated_float(float value) {
  _internal_add_repeated_float(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_float)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Msg::_internal_repeated_float() const {
  return repeated_float_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
Msg::repeated_float() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_float)
  return _internal_repeated_float();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Msg::_internal_mutable_repeated_float() {
  return &repeated_float_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
Msg::mutable_repeated_float() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_float)
  return _internal_mutable_repeated_float();
}

// repeated int32 repeated_int32 = 37;
inline int Msg::_internal_repeated_int32_size() const {
  return repeated_int32_.size();
}
inline int Msg::repeated_int32_size() const {
  return _internal_repeated_int32_size();
}
inline void Msg::clear_repeated_int32() {
  repeated_int32_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_repeated_int32(int index) const {
  return repeated_int32_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::repeated_int32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_int32)
  return _internal_repeated_int32(index);
}
inline void Msg::set_repeated_int32(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  repeated_int32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_int32)
}
inline void Msg::_internal_add_repeated_int32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  repeated_int32_.Add(value);
}
inline void Msg::add_repeated_int32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_repeated_int32(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_int32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Msg::_internal_repeated_int32() const {
  return repeated_int32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Msg::repeated_int32() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_int32)
  return _internal_repeated_int32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Msg::_internal_mutable_repeated_int32() {
  return &repeated_int32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Msg::mutable_repeated_int32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_int32)
  return _internal_mutable_repeated_int32();
}

// repeated int64 repeated_int64 = 38;
inline int Msg::_internal_repeated_int64_size() const {
  return repeated_int64_.size();
}
inline int Msg::repeated_int64_size() const {
  return _internal_repeated_int64_size();
}
inline void Msg::clear_repeated_int64() {
  repeated_int64_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_repeated_int64(int index) const {
  return repeated_int64_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::repeated_int64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_int64)
  return _internal_repeated_int64(index);
}
inline void Msg::set_repeated_int64(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  repeated_int64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_int64)
}
inline void Msg::_internal_add_repeated_int64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  repeated_int64_.Add(value);
}
inline void Msg::add_repeated_int64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_repeated_int64(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_int64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
Msg::_internal_repeated_int64() const {
  return repeated_int64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
Msg::repeated_int64() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_int64)
  return _internal_repeated_int64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
Msg::_internal_mutable_repeated_int64() {
  return &repeated_int64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
Msg::mutable_repeated_int64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_int64)
  return _internal_mutable_repeated_int64();
}

// repeated uint32 repeated_uint32 = 39;
inline int Msg::_internal_repeated_uint32_size() const {
  return repeated_uint32_.size();
}
inline int Msg::repeated_uint32_size() const {
  return _internal_repeated_uint32_size();
}
inline void Msg::clear_repeated_uint32() {
  repeated_uint32_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::_internal_repeated_uint32(int index) const {
  return repeated_uint32_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::repeated_uint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_uint32)
  return _internal_repeated_uint32(index);
}
inline void Msg::set_repeated_uint32(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  repeated_uint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_uint32)
}
inline void Msg::_internal_add_repeated_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  repeated_uint32_.Add(value);
}
inline void Msg::add_repeated_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_repeated_uint32(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_uint32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Msg::_internal_repeated_uint32() const {
  return repeated_uint32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Msg::repeated_uint32() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_uint32)
  return _internal_repeated_uint32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Msg::_internal_mutable_repeated_uint32() {
  return &repeated_uint32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Msg::mutable_repeated_uint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_uint32)
  return _internal_mutable_repeated_uint32();
}

// repeated uint64 repeated_uint64 = 40;
inline int Msg::_internal_repeated_uint64_size() const {
  return repeated_uint64_.size();
}
inline int Msg::repeated_uint64_size() const {
  return _internal_repeated_uint64_size();
}
inline void Msg::clear_repeated_uint64() {
  repeated_uint64_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::_internal_repeated_uint64(int index) const {
  return repeated_uint64_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::repeated_uint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_uint64)
  return _internal_repeated_uint64(index);
}
inline void Msg::set_repeated_uint64(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  repeated_uint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_uint64)
}
inline void Msg::_internal_add_repeated_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  repeated_uint64_.Add(value);
}
inline void Msg::add_repeated_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_repeated_uint64(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_uint64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
Msg::_internal_repeated_uint64() const {
  return repeated_uint64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
Msg::repeated_uint64() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_uint64)
  return _internal_repeated_uint64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
Msg::_internal_mutable_repeated_uint64() {
  return &repeated_uint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
Msg::mutable_repeated_uint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_uint64)
  return _internal_mutable_repeated_uint64();
}

// repeated sint32 repeated_sint32 = 41;
inline int Msg::_internal_repeated_sint32_size() const {
  return repeated_sint32_.size();
}
inline int Msg::repeated_sint32_size() const {
  return _internal_repeated_sint32_size();
}
inline void Msg::clear_repeated_sint32() {
  repeated_sint32_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_repeated_sint32(int index) const {
  return repeated_sint32_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::repeated_sint32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_sint32)
  return _internal_repeated_sint32(index);
}
inline void Msg::set_repeated_sint32(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  repeated_sint32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_sint32)
}
inline void Msg::_internal_add_repeated_sint32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  repeated_sint32_.Add(value);
}
inline void Msg::add_repeated_sint32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_repeated_sint32(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_sint32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Msg::_internal_repeated_sint32() const {
  return repeated_sint32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Msg::repeated_sint32() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_sint32)
  return _internal_repeated_sint32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Msg::_internal_mutable_repeated_sint32() {
  return &repeated_sint32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Msg::mutable_repeated_sint32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_sint32)
  return _internal_mutable_repeated_sint32();
}

// repeated sint64 repeated_sint64 = 42;
inline int Msg::_internal_repeated_sint64_size() const {
  return repeated_sint64_.size();
}
inline int Msg::repeated_sint64_size() const {
  return _internal_repeated_sint64_size();
}
inline void Msg::clear_repeated_sint64() {
  repeated_sint64_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_repeated_sint64(int index) const {
  return repeated_sint64_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::repeated_sint64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_sint64)
  return _internal_repeated_sint64(index);
}
inline void Msg::set_repeated_sint64(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  repeated_sint64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_sint64)
}
inline void Msg::_internal_add_repeated_sint64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  repeated_sint64_.Add(value);
}
inline void Msg::add_repeated_sint64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_repeated_sint64(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_sint64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
Msg::_internal_repeated_sint64() const {
  return repeated_sint64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
Msg::repeated_sint64() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_sint64)
  return _internal_repeated_sint64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
Msg::_internal_mutable_repeated_sint64() {
  return &repeated_sint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
Msg::mutable_repeated_sint64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_sint64)
  return _internal_mutable_repeated_sint64();
}

// repeated fixed32 repeated_fixed32 = 43;
inline int Msg::_internal_repeated_fixed32_size() const {
  return repeated_fixed32_.size();
}
inline int Msg::repeated_fixed32_size() const {
  return _internal_repeated_fixed32_size();
}
inline void Msg::clear_repeated_fixed32() {
  repeated_fixed32_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::_internal_repeated_fixed32(int index) const {
  return repeated_fixed32_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::repeated_fixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_fixed32)
  return _internal_repeated_fixed32(index);
}
inline void Msg::set_repeated_fixed32(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  repeated_fixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_fixed32)
}
inline void Msg::_internal_add_repeated_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  repeated_fixed32_.Add(value);
}
inline void Msg::add_repeated_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_repeated_fixed32(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_fixed32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Msg::_internal_repeated_fixed32() const {
  return repeated_fixed32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
Msg::repeated_fixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_fixed32)
  return _internal_repeated_fixed32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Msg::_internal_mutable_repeated_fixed32() {
  return &repeated_fixed32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
Msg::mutable_repeated_fixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_fixed32)
  return _internal_mutable_repeated_fixed32();
}

// repeated fixed64 repeated_fixed64 = 44;
inline int Msg::_internal_repeated_fixed64_size() const {
  return repeated_fixed64_.size();
}
inline int Msg::repeated_fixed64_size() const {
  return _internal_repeated_fixed64_size();
}
inline void Msg::clear_repeated_fixed64() {
  repeated_fixed64_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::_internal_repeated_fixed64(int index) const {
  return repeated_fixed64_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::repeated_fixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_fixed64)
  return _internal_repeated_fixed64(index);
}
inline void Msg::set_repeated_fixed64(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  repeated_fixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_fixed64)
}
inline void Msg::_internal_add_repeated_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  repeated_fixed64_.Add(value);
}
inline void Msg::add_repeated_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_repeated_fixed64(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_fixed64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
Msg::_internal_repeated_fixed64() const {
  return repeated_fixed64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
Msg::repeated_fixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_fixed64)
  return _internal_repeated_fixed64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
Msg::_internal_mutable_repeated_fixed64() {
  return &repeated_fixed64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
Msg::mutable_repeated_fixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_fixed64)
  return _internal_mutable_repeated_fixed64();
}

// repeated sfixed32 repeated_sfixed32 = 45;
inline int Msg::_internal_repeated_sfixed32_size() const {
  return repeated_sfixed32_.size();
}
inline int Msg::repeated_sfixed32_size() const {
  return _internal_repeated_sfixed32_size();
}
inline void Msg::clear_repeated_sfixed32() {
  repeated_sfixed32_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_repeated_sfixed32(int index) const {
  return repeated_sfixed32_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::repeated_sfixed32(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_sfixed32)
  return _internal_repeated_sfixed32(index);
}
inline void Msg::set_repeated_sfixed32(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  repeated_sfixed32_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_sfixed32)
}
inline void Msg::_internal_add_repeated_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  repeated_sfixed32_.Add(value);
}
inline void Msg::add_repeated_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_repeated_sfixed32(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_sfixed32)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Msg::_internal_repeated_sfixed32() const {
  return repeated_sfixed32_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
Msg::repeated_sfixed32() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_sfixed32)
  return _internal_repeated_sfixed32();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Msg::_internal_mutable_repeated_sfixed32() {
  return &repeated_sfixed32_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
Msg::mutable_repeated_sfixed32() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_sfixed32)
  return _internal_mutable_repeated_sfixed32();
}

// repeated sfixed64 repeated_sfixed64 = 46;
inline int Msg::_internal_repeated_sfixed64_size() const {
  return repeated_sfixed64_.size();
}
inline int Msg::repeated_sfixed64_size() const {
  return _internal_repeated_sfixed64_size();
}
inline void Msg::clear_repeated_sfixed64() {
  repeated_sfixed64_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_repeated_sfixed64(int index) const {
  return repeated_sfixed64_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::repeated_sfixed64(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_sfixed64)
  return _internal_repeated_sfixed64(index);
}
inline void Msg::set_repeated_sfixed64(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  repeated_sfixed64_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_sfixed64)
}
inline void Msg::_internal_add_repeated_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  repeated_sfixed64_.Add(value);
}
inline void Msg::add_repeated_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_repeated_sfixed64(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_sfixed64)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
Msg::_internal_repeated_sfixed64() const {
  return repeated_sfixed64_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
Msg::repeated_sfixed64() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_sfixed64)
  return _internal_repeated_sfixed64();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
Msg::_internal_mutable_repeated_sfixed64() {
  return &repeated_sfixed64_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
Msg::mutable_repeated_sfixed64() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_sfixed64)
  return _internal_mutable_repeated_sfixed64();
}

// repeated bool repeated_bool = 47;
inline int Msg::_internal_repeated_bool_size() const {
  return repeated_bool_.size();
}
inline int Msg::repeated_bool_size() const {
  return _internal_repeated_bool_size();
}
inline void Msg::clear_repeated_bool() {
  repeated_bool_.Clear();
}
inline bool Msg::_internal_repeated_bool(int index) const {
  return repeated_bool_.Get(index);
}
inline bool Msg::repeated_bool(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_bool)
  return _internal_repeated_bool(index);
}
inline void Msg::set_repeated_bool(int index, bool value) {
  repeated_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_bool)
}
inline void Msg::_internal_add_repeated_bool(bool value) {
  repeated_bool_.Add(value);
}
inline void Msg::add_repeated_bool(bool value) {
  _internal_add_repeated_bool(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_bool)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
Msg::_internal_repeated_bool() const {
  return repeated_bool_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
Msg::repeated_bool() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_bool)
  return _internal_repeated_bool();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
Msg::_internal_mutable_repeated_bool() {
  return &repeated_bool_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
Msg::mutable_repeated_bool() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_bool)
  return _internal_mutable_repeated_bool();
}

// repeated string repeated_string = 48;
inline int Msg::_internal_repeated_string_size() const {
  return repeated_string_.size();
}
inline int Msg::repeated_string_size() const {
  return _internal_repeated_string_size();
}
inline void Msg::clear_repeated_string() {
  repeated_string_.Clear();
}
inline std::string* Msg::add_repeated_string() {
  std::string* _s = _internal_add_repeated_string();
  // @@protoc_insertion_point(field_add_mutable:protobuf_mutator.Msg.repeated_string)
  return _s;
}
inline const std::string& Msg::_internal_repeated_string(int index) const {
  return repeated_string_.Get(index);
}
inline const std::string& Msg::repeated_string(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_string)
  return _internal_repeated_string(index);
}
inline std::string* Msg::mutable_repeated_string(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.repeated_string)
  return repeated_string_.Mutable(index);
}
inline void Msg::set_repeated_string(int index, const std::string& value) {
  repeated_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_string)
}
inline void Msg::set_repeated_string(int index, std::string&& value) {
  repeated_string_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_string)
}
inline void Msg::set_repeated_string(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  repeated_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_mutator.Msg.repeated_string)
}
inline void Msg::set_repeated_string(int index, const char* value, size_t size) {
  repeated_string_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_mutator.Msg.repeated_string)
}
inline std::string* Msg::_internal_add_repeated_string() {
  return repeated_string_.Add();
}
inline void Msg::add_repeated_string(const std::string& value) {
  repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_string)
}
inline void Msg::add_repeated_string(std::string&& value) {
  repeated_string_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_string)
}
inline void Msg::add_repeated_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  repeated_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_mutator.Msg.repeated_string)
}
inline void Msg::add_repeated_string(const char* value, size_t size) {
  repeated_string_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_mutator.Msg.repeated_string)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Msg::repeated_string() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_string)
  return repeated_string_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Msg::mutable_repeated_string() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_string)
  return &repeated_string_;
}

// repeated bytes repeated_bytes = 49;
inline int Msg::_internal_repeated_bytes_size() const {
  return repeated_bytes_.size();
}
inline int Msg::repeated_bytes_size() const {
  return _internal_repeated_bytes_size();
}
inline void Msg::clear_repeated_bytes() {
  repeated_bytes_.Clear();
}
inline std::string* Msg::add_repeated_bytes() {
  std::string* _s = _internal_add_repeated_bytes();
  // @@protoc_insertion_point(field_add_mutable:protobuf_mutator.Msg.repeated_bytes)
  return _s;
}
inline const std::string& Msg::_internal_repeated_bytes(int index) const {
  return repeated_bytes_.Get(index);
}
inline const std::string& Msg::repeated_bytes(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_bytes)
  return _internal_repeated_bytes(index);
}
inline std::string* Msg::mutable_repeated_bytes(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.repeated_bytes)
  return repeated_bytes_.Mutable(index);
}
inline void Msg::set_repeated_bytes(int index, const std::string& value) {
  repeated_bytes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_bytes)
}
inline void Msg::set_repeated_bytes(int index, std::string&& value) {
  repeated_bytes_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_bytes)
}
inline void Msg::set_repeated_bytes(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  repeated_bytes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protobuf_mutator.Msg.repeated_bytes)
}
inline void Msg::set_repeated_bytes(int index, const void* value, size_t size) {
  repeated_bytes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protobuf_mutator.Msg.repeated_bytes)
}
inline std::string* Msg::_internal_add_repeated_bytes() {
  return repeated_bytes_.Add();
}
inline void Msg::add_repeated_bytes(const std::string& value) {
  repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_bytes)
}
inline void Msg::add_repeated_bytes(std::string&& value) {
  repeated_bytes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_bytes)
}
inline void Msg::add_repeated_bytes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  repeated_bytes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protobuf_mutator.Msg.repeated_bytes)
}
inline void Msg::add_repeated_bytes(const void* value, size_t size) {
  repeated_bytes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protobuf_mutator.Msg.repeated_bytes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
Msg::repeated_bytes() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_bytes)
  return repeated_bytes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
Msg::mutable_repeated_bytes() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_bytes)
  return &repeated_bytes_;
}

// repeated .protobuf_mutator.Msg.Enum repeated_enum = 50;
inline int Msg::_internal_repeated_enum_size() const {
  return repeated_enum_.size();
}
inline int Msg::repeated_enum_size() const {
  return _internal_repeated_enum_size();
}
inline void Msg::clear_repeated_enum() {
  repeated_enum_.Clear();
}
inline ::protobuf_mutator::Msg_Enum Msg::_internal_repeated_enum(int index) const {
  return static_cast< ::protobuf_mutator::Msg_Enum >(repeated_enum_.Get(index));
}
inline ::protobuf_mutator::Msg_Enum Msg::repeated_enum(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_enum)
  return _internal_repeated_enum(index);
}
inline void Msg::set_repeated_enum(int index, ::protobuf_mutator::Msg_Enum value) {
  assert(::protobuf_mutator::Msg_Enum_IsValid(value));
  repeated_enum_.Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.repeated_enum)
}
inline void Msg::_internal_add_repeated_enum(::protobuf_mutator::Msg_Enum value) {
  assert(::protobuf_mutator::Msg_Enum_IsValid(value));
  repeated_enum_.Add(value);
}
inline void Msg::add_repeated_enum(::protobuf_mutator::Msg_Enum value) {
  _internal_add_repeated_enum(value);
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_enum)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
Msg::repeated_enum() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_enum)
  return repeated_enum_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
Msg::_internal_mutable_repeated_enum() {
  return &repeated_enum_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
Msg::mutable_repeated_enum() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_enum)
  return _internal_mutable_repeated_enum();
}

// repeated .protobuf_mutator.Msg repeated_msg = 51;
inline int Msg::_internal_repeated_msg_size() const {
  return repeated_msg_.size();
}
inline int Msg::repeated_msg_size() const {
  return _internal_repeated_msg_size();
}
inline void Msg::clear_repeated_msg() {
  repeated_msg_.Clear();
}
inline ::protobuf_mutator::Msg* Msg::mutable_repeated_msg(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.repeated_msg)
  return repeated_msg_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_mutator::Msg >*
Msg::mutable_repeated_msg() {
  // @@protoc_insertion_point(field_mutable_list:protobuf_mutator.Msg.repeated_msg)
  return &repeated_msg_;
}
inline const ::protobuf_mutator::Msg& Msg::_internal_repeated_msg(int index) const {
  return repeated_msg_.Get(index);
}
inline const ::protobuf_mutator::Msg& Msg::repeated_msg(int index) const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.repeated_msg)
  return _internal_repeated_msg(index);
}
inline ::protobuf_mutator::Msg* Msg::_internal_add_repeated_msg() {
  return repeated_msg_.Add();
}
inline ::protobuf_mutator::Msg* Msg::add_repeated_msg() {
  ::protobuf_mutator::Msg* _add = _internal_add_repeated_msg();
  // @@protoc_insertion_point(field_add:protobuf_mutator.Msg.repeated_msg)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::protobuf_mutator::Msg >&
Msg::repeated_msg() const {
  // @@protoc_insertion_point(field_list:protobuf_mutator.Msg.repeated_msg)
  return repeated_msg_;
}

// double oneof_double = 52;
inline bool Msg::_internal_has_oneof_double() const {
  return OneOf_case() == kOneofDouble;
}
inline bool Msg::has_oneof_double() const {
  return _internal_has_oneof_double();
}
inline void Msg::set_has_oneof_double() {
  _oneof_case_[0] = kOneofDouble;
}
inline void Msg::clear_oneof_double() {
  if (_internal_has_oneof_double()) {
    OneOf_.oneof_double_ = 0;
    clear_has_OneOf();
  }
}
inline double Msg::_internal_oneof_double() const {
  if (_internal_has_oneof_double()) {
    return OneOf_.oneof_double_;
  }
  return 0;
}
inline void Msg::_internal_set_oneof_double(double value) {
  if (!_internal_has_oneof_double()) {
    clear_OneOf();
    set_has_oneof_double();
  }
  OneOf_.oneof_double_ = value;
}
inline double Msg::oneof_double() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_double)
  return _internal_oneof_double();
}
inline void Msg::set_oneof_double(double value) {
  _internal_set_oneof_double(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_double)
}

// float oneof_float = 53;
inline bool Msg::_internal_has_oneof_float() const {
  return OneOf_case() == kOneofFloat;
}
inline bool Msg::has_oneof_float() const {
  return _internal_has_oneof_float();
}
inline void Msg::set_has_oneof_float() {
  _oneof_case_[0] = kOneofFloat;
}
inline void Msg::clear_oneof_float() {
  if (_internal_has_oneof_float()) {
    OneOf_.oneof_float_ = 0;
    clear_has_OneOf();
  }
}
inline float Msg::_internal_oneof_float() const {
  if (_internal_has_oneof_float()) {
    return OneOf_.oneof_float_;
  }
  return 0;
}
inline void Msg::_internal_set_oneof_float(float value) {
  if (!_internal_has_oneof_float()) {
    clear_OneOf();
    set_has_oneof_float();
  }
  OneOf_.oneof_float_ = value;
}
inline float Msg::oneof_float() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_float)
  return _internal_oneof_float();
}
inline void Msg::set_oneof_float(float value) {
  _internal_set_oneof_float(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_float)
}

// int32 oneof_int32 = 54;
inline bool Msg::_internal_has_oneof_int32() const {
  return OneOf_case() == kOneofInt32;
}
inline bool Msg::has_oneof_int32() const {
  return _internal_has_oneof_int32();
}
inline void Msg::set_has_oneof_int32() {
  _oneof_case_[0] = kOneofInt32;
}
inline void Msg::clear_oneof_int32() {
  if (_internal_has_oneof_int32()) {
    OneOf_.oneof_int32_ = 0;
    clear_has_OneOf();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_oneof_int32() const {
  if (_internal_has_oneof_int32()) {
    return OneOf_.oneof_int32_;
  }
  return 0;
}
inline void Msg::_internal_set_oneof_int32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!_internal_has_oneof_int32()) {
    clear_OneOf();
    set_has_oneof_int32();
  }
  OneOf_.oneof_int32_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::oneof_int32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_int32)
  return _internal_oneof_int32();
}
inline void Msg::set_oneof_int32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_oneof_int32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_int32)
}

// int64 oneof_int64 = 55;
inline bool Msg::_internal_has_oneof_int64() const {
  return OneOf_case() == kOneofInt64;
}
inline bool Msg::has_oneof_int64() const {
  return _internal_has_oneof_int64();
}
inline void Msg::set_has_oneof_int64() {
  _oneof_case_[0] = kOneofInt64;
}
inline void Msg::clear_oneof_int64() {
  if (_internal_has_oneof_int64()) {
    OneOf_.oneof_int64_ = int64_t{0};
    clear_has_OneOf();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_oneof_int64() const {
  if (_internal_has_oneof_int64()) {
    return OneOf_.oneof_int64_;
  }
  return int64_t{0};
}
inline void Msg::_internal_set_oneof_int64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  if (!_internal_has_oneof_int64()) {
    clear_OneOf();
    set_has_oneof_int64();
  }
  OneOf_.oneof_int64_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::oneof_int64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_int64)
  return _internal_oneof_int64();
}
inline void Msg::set_oneof_int64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_oneof_int64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_int64)
}

// uint32 oneof_uint32 = 56;
inline bool Msg::_internal_has_oneof_uint32() const {
  return OneOf_case() == kOneofUint32;
}
inline bool Msg::has_oneof_uint32() const {
  return _internal_has_oneof_uint32();
}
inline void Msg::set_has_oneof_uint32() {
  _oneof_case_[0] = kOneofUint32;
}
inline void Msg::clear_oneof_uint32() {
  if (_internal_has_oneof_uint32()) {
    OneOf_.oneof_uint32_ = 0u;
    clear_has_OneOf();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::_internal_oneof_uint32() const {
  if (_internal_has_oneof_uint32()) {
    return OneOf_.oneof_uint32_;
  }
  return 0u;
}
inline void Msg::_internal_set_oneof_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  if (!_internal_has_oneof_uint32()) {
    clear_OneOf();
    set_has_oneof_uint32();
  }
  OneOf_.oneof_uint32_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::oneof_uint32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_uint32)
  return _internal_oneof_uint32();
}
inline void Msg::set_oneof_uint32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_oneof_uint32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_uint32)
}

// uint64 oneof_uint64 = 57;
inline bool Msg::_internal_has_oneof_uint64() const {
  return OneOf_case() == kOneofUint64;
}
inline bool Msg::has_oneof_uint64() const {
  return _internal_has_oneof_uint64();
}
inline void Msg::set_has_oneof_uint64() {
  _oneof_case_[0] = kOneofUint64;
}
inline void Msg::clear_oneof_uint64() {
  if (_internal_has_oneof_uint64()) {
    OneOf_.oneof_uint64_ = uint64_t{0u};
    clear_has_OneOf();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::_internal_oneof_uint64() const {
  if (_internal_has_oneof_uint64()) {
    return OneOf_.oneof_uint64_;
  }
  return uint64_t{0u};
}
inline void Msg::_internal_set_oneof_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  if (!_internal_has_oneof_uint64()) {
    clear_OneOf();
    set_has_oneof_uint64();
  }
  OneOf_.oneof_uint64_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::oneof_uint64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_uint64)
  return _internal_oneof_uint64();
}
inline void Msg::set_oneof_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_oneof_uint64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_uint64)
}

// sint32 oneof_sint32 = 58;
inline bool Msg::_internal_has_oneof_sint32() const {
  return OneOf_case() == kOneofSint32;
}
inline bool Msg::has_oneof_sint32() const {
  return _internal_has_oneof_sint32();
}
inline void Msg::set_has_oneof_sint32() {
  _oneof_case_[0] = kOneofSint32;
}
inline void Msg::clear_oneof_sint32() {
  if (_internal_has_oneof_sint32()) {
    OneOf_.oneof_sint32_ = 0;
    clear_has_OneOf();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_oneof_sint32() const {
  if (_internal_has_oneof_sint32()) {
    return OneOf_.oneof_sint32_;
  }
  return 0;
}
inline void Msg::_internal_set_oneof_sint32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!_internal_has_oneof_sint32()) {
    clear_OneOf();
    set_has_oneof_sint32();
  }
  OneOf_.oneof_sint32_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::oneof_sint32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_sint32)
  return _internal_oneof_sint32();
}
inline void Msg::set_oneof_sint32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_oneof_sint32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_sint32)
}

// sint64 oneof_sint64 = 59;
inline bool Msg::_internal_has_oneof_sint64() const {
  return OneOf_case() == kOneofSint64;
}
inline bool Msg::has_oneof_sint64() const {
  return _internal_has_oneof_sint64();
}
inline void Msg::set_has_oneof_sint64() {
  _oneof_case_[0] = kOneofSint64;
}
inline void Msg::clear_oneof_sint64() {
  if (_internal_has_oneof_sint64()) {
    OneOf_.oneof_sint64_ = int64_t{0};
    clear_has_OneOf();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_oneof_sint64() const {
  if (_internal_has_oneof_sint64()) {
    return OneOf_.oneof_sint64_;
  }
  return int64_t{0};
}
inline void Msg::_internal_set_oneof_sint64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  if (!_internal_has_oneof_sint64()) {
    clear_OneOf();
    set_has_oneof_sint64();
  }
  OneOf_.oneof_sint64_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::oneof_sint64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_sint64)
  return _internal_oneof_sint64();
}
inline void Msg::set_oneof_sint64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_oneof_sint64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_sint64)
}

// fixed32 oneof_fixed32 = 60;
inline bool Msg::_internal_has_oneof_fixed32() const {
  return OneOf_case() == kOneofFixed32;
}
inline bool Msg::has_oneof_fixed32() const {
  return _internal_has_oneof_fixed32();
}
inline void Msg::set_has_oneof_fixed32() {
  _oneof_case_[0] = kOneofFixed32;
}
inline void Msg::clear_oneof_fixed32() {
  if (_internal_has_oneof_fixed32()) {
    OneOf_.oneof_fixed32_ = 0u;
    clear_has_OneOf();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::_internal_oneof_fixed32() const {
  if (_internal_has_oneof_fixed32()) {
    return OneOf_.oneof_fixed32_;
  }
  return 0u;
}
inline void Msg::_internal_set_oneof_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  if (!_internal_has_oneof_fixed32()) {
    clear_OneOf();
    set_has_oneof_fixed32();
  }
  OneOf_.oneof_fixed32_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Msg::oneof_fixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_fixed32)
  return _internal_oneof_fixed32();
}
inline void Msg::set_oneof_fixed32(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_oneof_fixed32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_fixed32)
}

// fixed64 oneof_fixed64 = 61;
inline bool Msg::_internal_has_oneof_fixed64() const {
  return OneOf_case() == kOneofFixed64;
}
inline bool Msg::has_oneof_fixed64() const {
  return _internal_has_oneof_fixed64();
}
inline void Msg::set_has_oneof_fixed64() {
  _oneof_case_[0] = kOneofFixed64;
}
inline void Msg::clear_oneof_fixed64() {
  if (_internal_has_oneof_fixed64()) {
    OneOf_.oneof_fixed64_ = uint64_t{0u};
    clear_has_OneOf();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::_internal_oneof_fixed64() const {
  if (_internal_has_oneof_fixed64()) {
    return OneOf_.oneof_fixed64_;
  }
  return uint64_t{0u};
}
inline void Msg::_internal_set_oneof_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  if (!_internal_has_oneof_fixed64()) {
    clear_OneOf();
    set_has_oneof_fixed64();
  }
  OneOf_.oneof_fixed64_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Msg::oneof_fixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_fixed64)
  return _internal_oneof_fixed64();
}
inline void Msg::set_oneof_fixed64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_oneof_fixed64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_fixed64)
}

// sfixed32 oneof_sfixed32 = 62;
inline bool Msg::_internal_has_oneof_sfixed32() const {
  return OneOf_case() == kOneofSfixed32;
}
inline bool Msg::has_oneof_sfixed32() const {
  return _internal_has_oneof_sfixed32();
}
inline void Msg::set_has_oneof_sfixed32() {
  _oneof_case_[0] = kOneofSfixed32;
}
inline void Msg::clear_oneof_sfixed32() {
  if (_internal_has_oneof_sfixed32()) {
    OneOf_.oneof_sfixed32_ = 0;
    clear_has_OneOf();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::_internal_oneof_sfixed32() const {
  if (_internal_has_oneof_sfixed32()) {
    return OneOf_.oneof_sfixed32_;
  }
  return 0;
}
inline void Msg::_internal_set_oneof_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!_internal_has_oneof_sfixed32()) {
    clear_OneOf();
    set_has_oneof_sfixed32();
  }
  OneOf_.oneof_sfixed32_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Msg::oneof_sfixed32() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_sfixed32)
  return _internal_oneof_sfixed32();
}
inline void Msg::set_oneof_sfixed32(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_oneof_sfixed32(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_sfixed32)
}

// sfixed64 oneof_sfixed64 = 63;
inline bool Msg::_internal_has_oneof_sfixed64() const {
  return OneOf_case() == kOneofSfixed64;
}
inline bool Msg::has_oneof_sfixed64() const {
  return _internal_has_oneof_sfixed64();
}
inline void Msg::set_has_oneof_sfixed64() {
  _oneof_case_[0] = kOneofSfixed64;
}
inline void Msg::clear_oneof_sfixed64() {
  if (_internal_has_oneof_sfixed64()) {
    OneOf_.oneof_sfixed64_ = int64_t{0};
    clear_has_OneOf();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::_internal_oneof_sfixed64() const {
  if (_internal_has_oneof_sfixed64()) {
    return OneOf_.oneof_sfixed64_;
  }
  return int64_t{0};
}
inline void Msg::_internal_set_oneof_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  if (!_internal_has_oneof_sfixed64()) {
    clear_OneOf();
    set_has_oneof_sfixed64();
  }
  OneOf_.oneof_sfixed64_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Msg::oneof_sfixed64() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_sfixed64)
  return _internal_oneof_sfixed64();
}
inline void Msg::set_oneof_sfixed64(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_oneof_sfixed64(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_sfixed64)
}

// bool oneof_bool = 64;
inline bool Msg::_internal_has_oneof_bool() const {
  return OneOf_case() == kOneofBool;
}
inline bool Msg::has_oneof_bool() const {
  return _internal_has_oneof_bool();
}
inline void Msg::set_has_oneof_bool() {
  _oneof_case_[0] = kOneofBool;
}
inline void Msg::clear_oneof_bool() {
  if (_internal_has_oneof_bool()) {
    OneOf_.oneof_bool_ = false;
    clear_has_OneOf();
  }
}
inline bool Msg::_internal_oneof_bool() const {
  if (_internal_has_oneof_bool()) {
    return OneOf_.oneof_bool_;
  }
  return false;
}
inline void Msg::_internal_set_oneof_bool(bool value) {
  if (!_internal_has_oneof_bool()) {
    clear_OneOf();
    set_has_oneof_bool();
  }
  OneOf_.oneof_bool_ = value;
}
inline bool Msg::oneof_bool() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_bool)
  return _internal_oneof_bool();
}
inline void Msg::set_oneof_bool(bool value) {
  _internal_set_oneof_bool(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_bool)
}

// string oneof_string = 65;
inline bool Msg::_internal_has_oneof_string() const {
  return OneOf_case() == kOneofString;
}
inline bool Msg::has_oneof_string() const {
  return _internal_has_oneof_string();
}
inline void Msg::set_has_oneof_string() {
  _oneof_case_[0] = kOneofString;
}
inline void Msg::clear_oneof_string() {
  if (_internal_has_oneof_string()) {
    OneOf_.oneof_string_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
    clear_has_OneOf();
  }
}
inline const std::string& Msg::oneof_string() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_string)
  return _internal_oneof_string();
}
template <typename ArgT0, typename... ArgT>
inline void Msg::set_oneof_string(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_oneof_string()) {
    clear_OneOf();
    set_has_oneof_string();
    OneOf_.oneof_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  OneOf_.oneof_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_string)
}
inline std::string* Msg::mutable_oneof_string() {
  std::string* _s = _internal_mutable_oneof_string();
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.oneof_string)
  return _s;
}
inline const std::string& Msg::_internal_oneof_string() const {
  if (_internal_has_oneof_string()) {
    return OneOf_.oneof_string_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void Msg::_internal_set_oneof_string(const std::string& value) {
  if (!_internal_has_oneof_string()) {
    clear_OneOf();
    set_has_oneof_string();
    OneOf_.oneof_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  OneOf_.oneof_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* Msg::_internal_mutable_oneof_string() {
  if (!_internal_has_oneof_string()) {
    clear_OneOf();
    set_has_oneof_string();
    OneOf_.oneof_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return OneOf_.oneof_string_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* Msg::release_oneof_string() {
  // @@protoc_insertion_point(field_release:protobuf_mutator.Msg.oneof_string)
  if (_internal_has_oneof_string()) {
    clear_has_OneOf();
    return OneOf_.oneof_string_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
  } else {
    return nullptr;
  }
}
inline void Msg::set_allocated_oneof_string(std::string* oneof_string) {
  if (has_OneOf()) {
    clear_OneOf();
  }
  if (oneof_string != nullptr) {
    set_has_oneof_string();
    OneOf_.oneof_string_.UnsafeSetDefault(oneof_string);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaForAllocation();
    if (arena != nullptr) {
      arena->Own(oneof_string);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_mutator.Msg.oneof_string)
}

// bytes oneof_bytes = 66;
inline bool Msg::_internal_has_oneof_bytes() const {
  return OneOf_case() == kOneofBytes;
}
inline bool Msg::has_oneof_bytes() const {
  return _internal_has_oneof_bytes();
}
inline void Msg::set_has_oneof_bytes() {
  _oneof_case_[0] = kOneofBytes;
}
inline void Msg::clear_oneof_bytes() {
  if (_internal_has_oneof_bytes()) {
    OneOf_.oneof_bytes_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
    clear_has_OneOf();
  }
}
inline const std::string& Msg::oneof_bytes() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_bytes)
  return _internal_oneof_bytes();
}
template <typename ArgT0, typename... ArgT>
inline void Msg::set_oneof_bytes(ArgT0&& arg0, ArgT... args) {
  if (!_internal_has_oneof_bytes()) {
    clear_OneOf();
    set_has_oneof_bytes();
    OneOf_.oneof_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  OneOf_.oneof_bytes_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_bytes)
}
inline std::string* Msg::mutable_oneof_bytes() {
  std::string* _s = _internal_mutable_oneof_bytes();
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.oneof_bytes)
  return _s;
}
inline const std::string& Msg::_internal_oneof_bytes() const {
  if (_internal_has_oneof_bytes()) {
    return OneOf_.oneof_bytes_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void Msg::_internal_set_oneof_bytes(const std::string& value) {
  if (!_internal_has_oneof_bytes()) {
    clear_OneOf();
    set_has_oneof_bytes();
    OneOf_.oneof_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  OneOf_.oneof_bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* Msg::_internal_mutable_oneof_bytes() {
  if (!_internal_has_oneof_bytes()) {
    clear_OneOf();
    set_has_oneof_bytes();
    OneOf_.oneof_bytes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return OneOf_.oneof_bytes_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* Msg::release_oneof_bytes() {
  // @@protoc_insertion_point(field_release:protobuf_mutator.Msg.oneof_bytes)
  if (_internal_has_oneof_bytes()) {
    clear_has_OneOf();
    return OneOf_.oneof_bytes_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
  } else {
    return nullptr;
  }
}
inline void Msg::set_allocated_oneof_bytes(std::string* oneof_bytes) {
  if (has_OneOf()) {
    clear_OneOf();
  }
  if (oneof_bytes != nullptr) {
    set_has_oneof_bytes();
    OneOf_.oneof_bytes_.UnsafeSetDefault(oneof_bytes);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaForAllocation();
    if (arena != nullptr) {
      arena->Own(oneof_bytes);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf_mutator.Msg.oneof_bytes)
}

// .protobuf_mutator.Msg.Enum oneof_enum = 67;
inline bool Msg::_internal_has_oneof_enum() const {
  return OneOf_case() == kOneofEnum;
}
inline bool Msg::has_oneof_enum() const {
  return _internal_has_oneof_enum();
}
inline void Msg::set_has_oneof_enum() {
  _oneof_case_[0] = kOneofEnum;
}
inline void Msg::clear_oneof_enum() {
  if (_internal_has_oneof_enum()) {
    OneOf_.oneof_enum_ = 0;
    clear_has_OneOf();
  }
}
inline ::protobuf_mutator::Msg_Enum Msg::_internal_oneof_enum() const {
  if (_internal_has_oneof_enum()) {
    return static_cast< ::protobuf_mutator::Msg_Enum >(OneOf_.oneof_enum_);
  }
  return static_cast< ::protobuf_mutator::Msg_Enum >(0);
}
inline ::protobuf_mutator::Msg_Enum Msg::oneof_enum() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_enum)
  return _internal_oneof_enum();
}
inline void Msg::_internal_set_oneof_enum(::protobuf_mutator::Msg_Enum value) {
  assert(::protobuf_mutator::Msg_Enum_IsValid(value));
  if (!_internal_has_oneof_enum()) {
    clear_OneOf();
    set_has_oneof_enum();
  }
  OneOf_.oneof_enum_ = value;
}
inline void Msg::set_oneof_enum(::protobuf_mutator::Msg_Enum value) {
  _internal_set_oneof_enum(value);
  // @@protoc_insertion_point(field_set:protobuf_mutator.Msg.oneof_enum)
}

// .protobuf_mutator.Msg oneof_msg = 68;
inline bool Msg::_internal_has_oneof_msg() const {
  return OneOf_case() == kOneofMsg;
}
inline bool Msg::has_oneof_msg() const {
  return _internal_has_oneof_msg();
}
inline void Msg::set_has_oneof_msg() {
  _oneof_case_[0] = kOneofMsg;
}
inline void Msg::clear_oneof_msg() {
  if (_internal_has_oneof_msg()) {
    if (GetArenaForAllocation() == nullptr) {
      delete OneOf_.oneof_msg_;
    }
    clear_has_OneOf();
  }
}
inline ::protobuf_mutator::Msg* Msg::release_oneof_msg() {
  // @@protoc_insertion_point(field_release:protobuf_mutator.Msg.oneof_msg)
  if (_internal_has_oneof_msg()) {
    clear_has_OneOf();
      ::protobuf_mutator::Msg* temp = OneOf_.oneof_msg_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    OneOf_.oneof_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::protobuf_mutator::Msg& Msg::_internal_oneof_msg() const {
  return _internal_has_oneof_msg()
      ? *OneOf_.oneof_msg_
      : reinterpret_cast< ::protobuf_mutator::Msg&>(::protobuf_mutator::_Msg_default_instance_);
}
inline const ::protobuf_mutator::Msg& Msg::oneof_msg() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.oneof_msg)
  return _internal_oneof_msg();
}
inline ::protobuf_mutator::Msg* Msg::unsafe_arena_release_oneof_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:protobuf_mutator.Msg.oneof_msg)
  if (_internal_has_oneof_msg()) {
    clear_has_OneOf();
    ::protobuf_mutator::Msg* temp = OneOf_.oneof_msg_;
    OneOf_.oneof_msg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Msg::unsafe_arena_set_allocated_oneof_msg(::protobuf_mutator::Msg* oneof_msg) {
  clear_OneOf();
  if (oneof_msg) {
    set_has_oneof_msg();
    OneOf_.oneof_msg_ = oneof_msg;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_mutator.Msg.oneof_msg)
}
inline ::protobuf_mutator::Msg* Msg::_internal_mutable_oneof_msg() {
  if (!_internal_has_oneof_msg()) {
    clear_OneOf();
    set_has_oneof_msg();
    OneOf_.oneof_msg_ = CreateMaybeMessage< ::protobuf_mutator::Msg >(GetArenaForAllocation());
  }
  return OneOf_.oneof_msg_;
}
inline ::protobuf_mutator::Msg* Msg::mutable_oneof_msg() {
  ::protobuf_mutator::Msg* _msg = _internal_mutable_oneof_msg();
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.oneof_msg)
  return _msg;
}

// optional .protobuf_mutator.Msg.SubMsg sub_message = 69;
inline bool Msg::_internal_has_sub_message() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || sub_message_ != nullptr);
  return value;
}
inline bool Msg::has_sub_message() const {
  return _internal_has_sub_message();
}
inline void Msg::clear_sub_message() {
  if (sub_message_ != nullptr) sub_message_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::protobuf_mutator::Msg_SubMsg& Msg::_internal_sub_message() const {
  const ::protobuf_mutator::Msg_SubMsg* p = sub_message_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_mutator::Msg_SubMsg&>(
      ::protobuf_mutator::_Msg_SubMsg_default_instance_);
}
inline const ::protobuf_mutator::Msg_SubMsg& Msg::sub_message() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.sub_message)
  return _internal_sub_message();
}
inline void Msg::unsafe_arena_set_allocated_sub_message(
    ::protobuf_mutator::Msg_SubMsg* sub_message) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sub_message_);
  }
  sub_message_ = sub_message;
  if (sub_message) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_mutator.Msg.sub_message)
}
inline ::protobuf_mutator::Msg_SubMsg* Msg::release_sub_message() {
  _has_bits_[0] &= ~0x00000040u;
  ::protobuf_mutator::Msg_SubMsg* temp = sub_message_;
  sub_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_mutator::Msg_SubMsg* Msg::unsafe_arena_release_sub_message() {
  // @@protoc_insertion_point(field_release:protobuf_mutator.Msg.sub_message)
  _has_bits_[0] &= ~0x00000040u;
  ::protobuf_mutator::Msg_SubMsg* temp = sub_message_;
  sub_message_ = nullptr;
  return temp;
}
inline ::protobuf_mutator::Msg_SubMsg* Msg::_internal_mutable_sub_message() {
  _has_bits_[0] |= 0x00000040u;
  if (sub_message_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_mutator::Msg_SubMsg>(GetArenaForAllocation());
    sub_message_ = p;
  }
  return sub_message_;
}
inline ::protobuf_mutator::Msg_SubMsg* Msg::mutable_sub_message() {
  ::protobuf_mutator::Msg_SubMsg* _msg = _internal_mutable_sub_message();
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.sub_message)
  return _msg;
}
inline void Msg::set_allocated_sub_message(::protobuf_mutator::Msg_SubMsg* sub_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete sub_message_;
  }
  if (sub_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::protobuf_mutator::Msg_SubMsg>::GetOwningArena(sub_message);
    if (message_arena != submessage_arena) {
      sub_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sub_message, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  sub_message_ = sub_message;
  // @@protoc_insertion_point(field_set_allocated:protobuf_mutator.Msg.sub_message)
}

// required group Group = 70 { ... };
inline bool Msg::_internal_has_group() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || group_ != nullptr);
  return value;
}
inline bool Msg::has_group() const {
  return _internal_has_group();
}
inline void Msg::clear_group() {
  if (group_ != nullptr) group_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::protobuf_mutator::Msg_Group& Msg::_internal_group() const {
  const ::protobuf_mutator::Msg_Group* p = group_;
  return p != nullptr ? *p : reinterpret_cast<const ::protobuf_mutator::Msg_Group&>(
      ::protobuf_mutator::_Msg_Group_default_instance_);
}
inline const ::protobuf_mutator::Msg_Group& Msg::group() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.group)
  return _internal_group();
}
inline void Msg::unsafe_arena_set_allocated_group(
    ::protobuf_mutator::Msg_Group* group) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(group_);
  }
  group_ = group;
  if (group) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_mutator.Msg.group)
}
inline ::protobuf_mutator::Msg_Group* Msg::release_group() {
  _has_bits_[0] &= ~0x00000080u;
  ::protobuf_mutator::Msg_Group* temp = group_;
  group_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::protobuf_mutator::Msg_Group* Msg::unsafe_arena_release_group() {
  // @@protoc_insertion_point(field_release:protobuf_mutator.Msg.group)
  _has_bits_[0] &= ~0x00000080u;
  ::protobuf_mutator::Msg_Group* temp = group_;
  group_ = nullptr;
  return temp;
}
inline ::protobuf_mutator::Msg_Group* Msg::_internal_mutable_group() {
  _has_bits_[0] |= 0x00000080u;
  if (group_ == nullptr) {
    auto* p = CreateMaybeMessage<::protobuf_mutator::Msg_Group>(GetArenaForAllocation());
    group_ = p;
  }
  return group_;
}
inline ::protobuf_mutator::Msg_Group* Msg::mutable_group() {
  ::protobuf_mutator::Msg_Group* _msg = _internal_mutable_group();
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.group)
  return _msg;
}
inline void Msg::set_allocated_group(::protobuf_mutator::Msg_Group* group) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete group_;
  }
  if (group) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::protobuf_mutator::Msg_Group>::GetOwningArena(group);
    if (message_arena != submessage_arena) {
      group = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, group, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  group_ = group;
  // @@protoc_insertion_point(field_set_allocated:protobuf_mutator.Msg.group)
}

// optional .google.protobuf.Any any = 90;
inline bool Msg::_internal_has_any() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || any_ != nullptr);
  return value;
}
inline bool Msg::has_any() const {
  return _internal_has_any();
}
inline const PROTOBUF_NAMESPACE_ID::Any& Msg::_internal_any() const {
  const PROTOBUF_NAMESPACE_ID::Any* p = any_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Any&>(
      PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Any& Msg::any() const {
  // @@protoc_insertion_point(field_get:protobuf_mutator.Msg.any)
  return _internal_any();
}
inline void Msg::unsafe_arena_set_allocated_any(
    PROTOBUF_NAMESPACE_ID::Any* any) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(any_);
  }
  any_ = any;
  if (any) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_mutator.Msg.any)
}
inline PROTOBUF_NAMESPACE_ID::Any* Msg::release_any() {
  _has_bits_[0] &= ~0x00000100u;
  PROTOBUF_NAMESPACE_ID::Any* temp = any_;
  any_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Any* Msg::unsafe_arena_release_any() {
  // @@protoc_insertion_point(field_release:protobuf_mutator.Msg.any)
  _has_bits_[0] &= ~0x00000100u;
  PROTOBUF_NAMESPACE_ID::Any* temp = any_;
  any_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Any* Msg::_internal_mutable_any() {
  _has_bits_[0] |= 0x00000100u;
  if (any_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Any>(GetArenaForAllocation());
    any_ = p;
  }
  return any_;
}
inline PROTOBUF_NAMESPACE_ID::Any* Msg::mutable_any() {
  PROTOBUF_NAMESPACE_ID::Any* _msg = _internal_mutable_any();
  // @@protoc_insertion_point(field_mutable:protobuf_mutator.Msg.any)
  return _msg;
}
inline void Msg::set_allocated_any(PROTOBUF_NAMESPACE_ID::Any* any) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(any_);
  }
  if (any) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(any));
    if (message_arena != submessage_arena) {
      any = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, any, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  any_ = any;
  // @@protoc_insertion_point(field_set_allocated:protobuf_mutator.Msg.any)
}

inline bool Msg::has_OneOf() const {
  return OneOf_case() != ONEOF_NOT_SET;
}
inline void Msg::clear_has_OneOf() {
  _oneof_case_[0] = ONEOF_NOT_SET;
}
inline Msg::OneOfCase Msg::OneOf_case() const {
  return Msg::OneOfCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf_mutator

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum>() {
  return ::protobuf_mutator::Msg_RegressionMessage_SingleValueEnum_descriptor();
}
template <> struct is_proto_enum< ::protobuf_mutator::Msg_SmallMessage_Enum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_mutator::Msg_SmallMessage_Enum>() {
  return ::protobuf_mutator::Msg_SmallMessage_Enum_descriptor();
}
template <> struct is_proto_enum< ::protobuf_mutator::Msg_Enum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protobuf_mutator::Msg_Enum>() {
  return ::protobuf_mutator::Msg_Enum_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mutator_5ftest_5fproto2_2eproto
